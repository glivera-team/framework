{"sections":[{"header":"Buttons","description":"<p class=\"sg\">We use sass @extend function to create buttons. All button&apos;s styles are separated to sizes and colors.\nYou should write these extends in <b>assets/sass/helpers/_buttons_extends.scss</b> file</p>\n","modifiers":[],"deprecated":false,"experimental":false,"reference":"1","markup":null,"syntax":"scss","file":"_buttons.scss","wrapper":"<sg-wrapper-content/>","fileHash":"ecbb999933b53413af0a34d52f3bbcc7"},{"header":"Default button","description":"<p class=\"sg\">Each button has own class and optional additional class.\nWe use sass @extend function to create buttons. All button&apos;s styles are separated to sizes and colors\nYou should write these extends in <b>assets/sass/helpers/_buttons_extends.scss</b> file</p>\n","modifiers":[{"id":1,"name":".big_mod","description":"Big button","className":"big_mod","markup":"<a href=\"#\" class=\"btn_default {$modifiers}\">Button</a>","markupJade":"a.btn_default(href=\"#\" class=\"{$modifiers}\") Button","renderMarkup":"<a href=\"#\" class=\"btn_default {$modifiers}\">Button</a>"},{"id":2,"name":".standart_mod","description":"Standart-size button","className":"standart_mod","markup":"<a href=\"#\" class=\"btn_default {$modifiers}\">Button</a>","markupJade":"a.btn_default(href=\"#\" class=\"{$modifiers}\") Button","renderMarkup":"<a href=\"#\" class=\"btn_default {$modifiers}\">Button</a>"},{"id":3,"name":".small_mod","description":"Small button","className":"small_mod","markup":"<a href=\"#\" class=\"btn_default {$modifiers}\">Button</a>","markupJade":"a.btn_default(href=\"#\" class=\"{$modifiers}\") Button","renderMarkup":"<a href=\"#\" class=\"btn_default {$modifiers}\">Button</a>"}],"deprecated":false,"experimental":false,"reference":"1.1","markup":"<a href=\"#\" class=\"btn_default {$modifiers}\">Button</a>","css":"// variables\r\n$white:#fff;\r\n$brand_default_color: #3498db;\r\n$brand_success_color: #2ecc71;\r\n$brand_danger_color: #e74c3c;\r\n\r\n//common styles for buttons\r\n@mixin button() {\r\n\tdisplay: inline-block;\r\n\ttext-decoration: none;\r\n\ttext-align: center;\r\n\tfont-family:sans-serif;\r\n\r\n\t&:hover, &:focus {\r\n\t\ttext-decoration: none;\r\n\t}\r\n}\r\n\r\n// color types\r\n%button_default {\r\n\tcolor:$white;\r\n\tbackground: $brand_default_color;\r\n\ttransition:background .3s ease;\r\n\r\n\t&:hover {\r\n\t\tbackground:darken($brand_default_color,5%);\r\n\t}\r\n}\r\n\r\n// size types\r\n%button_big {\r\n\theight: 5rem;\r\n\tpadding:0 3rem;\r\n\tline-height: 5rem;\r\n\tfont-size: 2rem;\r\n\tborder-radius:8px;\r\n\r\n\t@include button();\r\n}\r\n\r\n%button_standart {\r\n\theight: 3.6rem;\r\n\tpadding:0 2rem;\r\n\tfont-size: 1.6rem;\r\n\tline-height: 3.6rem;\r\n\tborder-radius: 6px;\r\n\r\n\t@include button();\r\n}\r\n\r\n%button_small {\r\n\theight: 2.4rem;\r\n\tpadding:0 1rem;\r\n\tfont-size: 1.3rem;\r\n\tline-height: 2.4rem;\r\n\tborder-radius: 4px;\r\n\r\n\t@include button();\r\n}\r\n\r\n.btn_default {\r\n\t@extend %button_default;\r\n\r\n\t&.big_mod {\r\n\t\t@extend %button_big;\r\n\t}\r\n\r\n\t&.standart_mod {\r\n\t\t@extend %button_standart;\r\n\t}\r\n\r\n\t&.small_mod {\r\n\t\t@extend %button_small;\r\n\t}\r\n}","syntax":"scss","file":"_buttons.scss","markupJade":"a.btn_default(href=\"#\" class=\"{$modifiers}\") Button","parentReference":"1","wrapper":"<sg-wrapper-content/>","renderMarkup":"<a href=\"#\" class=\"btn_default {$modifiers}\">Button</a>","variables":["white","brand_default_color","brand_default_color"],"fileHash":"ecbb999933b53413af0a34d52f3bbcc7"},{"header":"Success button","description":"<p class=\"sg\">Each button has own class and optional additional class.\nWe use sass @extend function to create buttons. All button&apos;s styles are separated to sizes and colors\nYou should write these extends in <b>assets/sass/helpers/_buttons_extends.scss</b> file</p>\n","modifiers":[{"id":1,"name":".big_mod","description":"Big button","className":"big_mod","markup":"<a href=\"#\" class=\"btn_success {$modifiers}\">Button</a>","markupJade":"a.btn_success(href=\"#\" class=\"{$modifiers}\") Button","renderMarkup":"<a href=\"#\" class=\"btn_success {$modifiers}\">Button</a>"},{"id":2,"name":".standart_mod","description":"Standart-size button","className":"standart_mod","markup":"<a href=\"#\" class=\"btn_success {$modifiers}\">Button</a>","markupJade":"a.btn_success(href=\"#\" class=\"{$modifiers}\") Button","renderMarkup":"<a href=\"#\" class=\"btn_success {$modifiers}\">Button</a>"},{"id":3,"name":".small_mod","description":"Small button","className":"small_mod","markup":"<a href=\"#\" class=\"btn_success {$modifiers}\">Button</a>","markupJade":"a.btn_success(href=\"#\" class=\"{$modifiers}\") Button","renderMarkup":"<a href=\"#\" class=\"btn_success {$modifiers}\">Button</a>"}],"deprecated":false,"experimental":false,"reference":"1.2","markup":"<a href=\"#\" class=\"btn_success {$modifiers}\">Button</a>","css":"// variables\r\n$white:#fff;\r\n$brand_default_color: #3498db;\r\n$brand_success_color: #2ecc71;\r\n$brand_danger_color: #e74c3c;\r\n\r\n//common styles for buttons\r\n@mixin button() {\r\n\tdisplay: inline-block;\r\n\ttext-decoration: none;\r\n\ttext-align: center;\r\n\tfont-family:sans-serif;\r\n\r\n\t&:hover, &:focus {\r\n\t\ttext-decoration: none;\r\n\t}\r\n}\r\n\r\n// color types\r\n%button_success {\r\n\tcolor:$white;\r\n\tbackground: $brand_success_color;\r\n\ttransition:background .3s ease;\r\n\r\n\t&:hover {\r\n\t\tbackground:darken($brand_success_color,5%);\r\n\t}\r\n}\r\n\r\n\r\n// size types\r\n%button_big {\r\n\theight: 5rem;\r\n\tpadding:0 3rem;\r\n\tline-height: 5rem;\r\n\tfont-size: 2rem;\r\n\tborder-radius:8px;\r\n\r\n\t@include button();\r\n}\r\n\r\n%button_standart {\r\n\theight: 3.6rem;\r\n\tpadding:0 2rem;\r\n\tfont-size: 1.6rem;\r\n\tline-height: 3.6rem;\r\n\tborder-radius: 6px;\r\n\r\n\t@include button();\r\n}\r\n\r\n%button_small {\r\n\theight: 2.4rem;\r\n\tpadding:0 1rem;\r\n\tfont-size: 1.3rem;\r\n\tline-height: 2.4rem;\r\n\tborder-radius: 4px;\r\n\r\n\t@include button();\r\n}\r\n\r\n.btn_success {\r\n\t@extend %button_success;\r\n\r\n\t&.big_mod {\r\n\t\t@extend %button_big;\r\n\t}\r\n\r\n\t&.standart_mod {\r\n\t\t@extend %button_standart;\r\n\t}\r\n\r\n\t&.small_mod {\r\n\t\t@extend %button_small;\r\n\t}\r\n}","syntax":"scss","file":"_buttons.scss","markupJade":"a.btn_success(href=\"#\" class=\"{$modifiers}\") Button","parentReference":"1","wrapper":"<sg-wrapper-content/>","renderMarkup":"<a href=\"#\" class=\"btn_success {$modifiers}\">Button</a>","variables":["white","brand_success_color","brand_success_color"],"fileHash":"ecbb999933b53413af0a34d52f3bbcc7"},{"header":"Danger button","description":"<p class=\"sg\">Each button has own class and optional additional class.\nWe use sass @extend function to create buttons. All button&apos;s styles are separated to sizes and colors\nYou should write these extends in <b>assets/sass/helpers/_buttons_extends.scss</b> file</p>\n","modifiers":[{"id":1,"name":".big_mod","description":"Big button","className":"big_mod","markup":"<a href=\"#\" class=\"btn_danger {$modifiers}\">Button</a>","markupJade":"a.btn_danger(href=\"#\" class=\"{$modifiers}\") Button","renderMarkup":"<a href=\"#\" class=\"btn_danger {$modifiers}\">Button</a>"},{"id":2,"name":".standart_mod","description":"Standart-size button","className":"standart_mod","markup":"<a href=\"#\" class=\"btn_danger {$modifiers}\">Button</a>","markupJade":"a.btn_danger(href=\"#\" class=\"{$modifiers}\") Button","renderMarkup":"<a href=\"#\" class=\"btn_danger {$modifiers}\">Button</a>"},{"id":3,"name":".small_mod","description":"Small button","className":"small_mod","markup":"<a href=\"#\" class=\"btn_danger {$modifiers}\">Button</a>","markupJade":"a.btn_danger(href=\"#\" class=\"{$modifiers}\") Button","renderMarkup":"<a href=\"#\" class=\"btn_danger {$modifiers}\">Button</a>"}],"deprecated":false,"experimental":false,"reference":"1.3","markup":"<a href=\"#\" class=\"btn_danger {$modifiers}\">Button</a>","css":"// variables\r\n$white:#fff;\r\n$brand_default_color: #3498db;\r\n$brand_success_color: #2ecc71;\r\n$brand_danger_color: #e74c3c;\r\n\r\n//common styles for buttons\r\n@mixin button() {\r\n\tdisplay: inline-block;\r\n\ttext-decoration: none;\r\n\ttext-align: center;\r\n\tfont-family:sans-serif;\r\n\r\n\t&:hover, &:focus {\r\n\t\ttext-decoration: none;\r\n\t}\r\n}\r\n\r\n// color types\r\n%button_danger {\r\n\tcolor:$white;\r\n\tbackground: $brand_danger_color;\r\n\ttransition:background .3s ease;\r\n\r\n\t&:hover {\r\n\t\tbackground:darken($brand_danger_color,5%);\r\n\t}\r\n}\r\n\r\n// size types\r\n%button_big {\r\n\theight: 5rem;\r\n\tpadding:0 3rem;\r\n\tline-height: 5rem;\r\n\tfont-size: 2rem;\r\n\tborder-radius:8px;\r\n\r\n\t@include button();\r\n}\r\n\r\n%button_standart {\r\n\theight: 3.6rem;\r\n\tpadding:0 2rem;\r\n\tfont-size: 1.6rem;\r\n\tline-height: 3.6rem;\r\n\tborder-radius: 6px;\r\n\r\n\t@include button();\r\n}\r\n\r\n%button_small {\r\n\theight: 2.4rem;\r\n\tpadding:0 1rem;\r\n\tfont-size: 1.3rem;\r\n\tline-height: 2.4rem;\r\n\tborder-radius: 4px;\r\n\r\n\t@include button();\r\n}\r\n\r\n.btn_danger {\r\n\t@extend %button_danger;\r\n\r\n\t&.big_mod {\r\n\t\t@extend %button_big;\r\n\t}\r\n\r\n\t&.standart_mod {\r\n\t\t@extend %button_standart;\r\n\t}\r\n\r\n\t&.small_mod {\r\n\t\t@extend %button_small;\r\n\t}\r\n}","syntax":"scss","file":"_buttons.scss","markupJade":"a.btn_danger(href=\"#\" class=\"{$modifiers}\") Button","parentReference":"1","wrapper":"<sg-wrapper-content/>","renderMarkup":"<a href=\"#\" class=\"btn_danger {$modifiers}\">Button</a>","variables":["white","brand_danger_color","brand_danger_color"],"fileHash":"ecbb999933b53413af0a34d52f3bbcc7"},{"header":"Form elements","description":"<p class=\"sg\">We use jade mixins for the form elements. You can find examples of mixins, arrays and styles for it in the <b>helpers/components/forms</b> folder.</p>\n","modifiers":[],"deprecated":false,"experimental":false,"reference":"2","markup":null,"syntax":"scss","file":"_forms.scss","wrapper":"<sg-wrapper-content/>","fileHash":"59e31a54b3ca396d2ccd5c4df4833b47"},{"header":"Text input","description":"<p class=\"sg\">Input type text with dl structure. In jade we define arrays with classes for input, mixin(form_element) and then invoke it. You should create all styles for the form elements in <b>assets/sass/_forms.scss</b> file.</p>\n","modifiers":[],"deprecated":false,"experimental":false,"reference":"2.1","markup":"\n<dl class=\"form_cell form_cell_v1_mod\">\n  <dt class=\"form_cell_title form_v1_mod\">\n    <label for=\"text_1\">Input with title</label>\n  </dt>\n  <dd class=\"form_field_wrap form_v1_mod\">\n    <input type=\"text\" id=\"text_1\" placeholder=\"Placeholder text\" class=\"form_field default_mod \">\n  </dd>\n</dl>\n<dl class=\"form_cell form_cell_v2_mod\">\n  <dt class=\"form_cell_title form_v2_mod\">\n    <label for=\"text_2\">Input with horizontal layout</label>\n  </dt>\n  <dd class=\"form_field_wrap form_v2_mod\">\n    <input type=\"text\" id=\"text_2\" placeholder=\"Placeholder text\" class=\"form_field default_mod \">\n  </dd>\n</dl>\n<dl class=\"form_cell form_cell_v1_mod\">\n  <dt class=\"form_cell_title form_v1_mod hline_hide_mod\">\n    <label for=\"text_3\">Input without title</label>\n  </dt>\n  <dd class=\"form_field_wrap form_v1_mod hline_hide_mod\">\n    <input type=\"text\" id=\"text_3\" placeholder=\"Input without title\" class=\"form_field default_mod \">\n  </dd>\n</dl>\n<dl class=\"form_cell form_cell_v1_mod\">\n  <dt class=\"form_cell_title form_v1_mod hline_hide_mod\">\n    <label for=\"text_4\">Input with icon</label>\n  </dt>\n  <dd class=\"form_field_wrap form_v1_mod hline_hide_mod\">\n    <input type=\"text\" id=\"text_4\" placeholder=\"With right icon\" class=\"form_field default_mod right_icon_mod\"><a href=\"#\" class=\"input_icon right_mod search_mod\">search</a>\n  </dd>\n</dl>\n<dl class=\"form_cell form_cell_v1_mod\">\n  <dt class=\"form_cell_title form_v1_mod hline_hide_mod\">\n    <label for=\"text_5\">Input with icon</label>\n  </dt>\n  <dd class=\"form_field_wrap form_v1_mod hline_hide_mod\">\n    <input type=\"text\" id=\"text_5\" placeholder=\"With left icon\" class=\"form_field default_mod left_icon_mod\"><a href=\"#\" class=\"input_icon left_mod search_mod\">search</a>\n  </dd>\n</dl>","css":"// variables\r\n$font_1: sans-serif;\r\n$input_height: 4rem;\r\n$input_offset: 0 1rem;\r\n$input_font_size: $font_size_base;\r\n$input_border_color: gray;\r\n$input_border_color_active: $black;\r\n$input_placeholder_color: #aaa;\r\n$input_text_color: $black;\r\n$input_radius: $gl_radius;\r\n\r\n%form_field_default {\r\n\tdisplay: block;\r\n\twidth: 100%;\r\n\theight: $input_height;\r\n\tpadding: $input_offset;\r\n\tfont-size: $input_font_size;\r\n\tfont-family: $font_1;\r\n\tcolor: $input_text_color;\r\n\tborder:none;\r\n\tborder-radius: $input_radius;\r\n\tbox-shadow: 0 0 0 1px $input_border_color;\r\n\r\n\t&::-webkit-input-placeholder {\r\n\t\tcolor: $input_placeholder_color;\r\n\t}\r\n\r\n\t&::-moz-placeholder {\r\n\t\tcolor: $input_placeholder_color;\r\n\t}\r\n\t&:-ms-input-placeholder {\r\n\t\tcolor: $input_placeholder_color;\r\n\t}\r\n\r\n\t&.right_icon_mod {\r\n\t\tpadding-right: 4rem;\r\n\t}\r\n\r\n\t&.left_icon_mod {\r\n\t\tpadding-left: 4rem;\r\n\t}\r\n}\r\n\r\n%form_field_default_hover {\r\n}\r\n\r\n%form_field_default_active {\r\n\tbox-shadow: 0 0 0 1px $input_border_color_active;\r\n\r\n\t&::-webkit-input-placeholder {\r\n\t\tcolor: transparent;\r\n\t}\r\n\r\n\t&::-moz-placeholder {\r\n\t\tcolor: transparent;\r\n\t}\r\n\t&:-ms-input-placeholder {\r\n\t\tcolor: transparent;\r\n\t}\r\n}\r\n\r\n.form_cell {\r\n\t&.hidden_field {\r\n\t\tdisplay: none;\r\n\t}\r\n\r\n\t&.form_cell_v1_mod {\r\n\t\twidth: 50%;\r\n\t\tmin-width: 24rem;\r\n\t\tmargin: 3rem 0 0;\r\n\r\n\t\t&:first-child {\r\n\t\t\tmargin: 0;\r\n\t\t}\r\n\t}\r\n\r\n\t&.form_cell_v2_mod {\r\n\t\tdisplay:flex;\r\n\t\talign-items:center;\r\n\t\twidth: 50%;\r\n\t\tmin-width: 34rem;\r\n\t\tmargin: 3rem 0 0;\r\n\r\n\t\t&:first-child {\r\n\t\t\tmargin: 0;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n.form_cell_title {\r\n\r\n\t&.hline_hide_mod {\r\n\t\tdisplay: none;\r\n\t}\r\n\t&.form_v1_mod {\r\n\t\tmargin: 0 0 .4rem;\r\n\t}\r\n\t&.form_v2_mod {\r\n\t\tmargin: 0 1rem 0 0;\r\n\t\tflex:0 0 auto;\r\n\t}\r\n}\r\n\r\n.form_field_wrap {\r\n\tposition: relative;\r\n\r\n\t&.form_v2_mod {\r\n\t\tflex:1 1 auto;\r\n\t}\r\n}\r\n\r\n.form_field:not(.select_rediz_coosen) {\r\n\t&.default_mod {\r\n\t\t@extend %form_field_default;\r\n\r\n\t\t&:focus {\r\n\t\t\t@extend %form_field_default_active;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n.input_icon {\r\n\tposition: absolute;\r\n\tfont-size: 0;\r\n\ttop: 50%;\r\n\twidth: 2rem;\r\n\theight: 2rem;\r\n\tmargin-top: -1rem;\r\n\r\n\t&.right_mod {\r\n\t\tright: 1rem;\r\n\t}\r\n\r\n\t&.left_mod {\r\n\t\tleft: 1rem;\r\n\t}\r\n\r\n\t&.search_mod {\r\n\t\tbackground: url(../i/icons/search.svg);\r\n\t\tbackground-size:100% 100%;\r\n\t}\r\n}","syntax":"scss","file":"_forms.scss","markupJade":"//- arrays for form elements\n- var default_field = {block_class_mod:'form_cell_v1_mod',class_mod:'form_v1_mod', elem_class:'default_mod'}\n- var default_field_hidden = {block_class_mod:'form_cell_v1_mod',class_mod:'form_v1_mod hline_hide_mod', elem_class:'default_mod'}\n- var second_field = {block_class_mod:'form_cell_v2_mod',class_mod:'form_v2_mod', elem_class:'default_mod'}\n//- mixin for form elements\nmixin form_element(config)\n //- default values\n - config.class_array = config.class_array || {}\n - config.class_array.block_class_mod = config.class_array.block_class_mod || ''\n - config.class_array.class_mod = config.class_array.class_mod || ''\n - config.class_array.elem_class = config.class_array.elem_class || ''\n - config.add_class = config.add_class || ''\n - config.placeholder = config.placeholder || ''\n if !config.id\n  - config.id = config.title.replace(/\\s/g, '_').replace(/[.,:;(){}/?!@#$%&*]/g, '')\n else\n  - config.id = config.id.replace(/\\s/g, '_').replace(/[.,:;(){}/?!@#$%&*]/g, '')\n if config.type === 'text' || config.type === 'password' || config.type === 'email' || config.type === 'tel' || config.type === 'textarea' || config.type === 'select' || config.type === 'file'\n  dl.form_cell(class=config.class_array.block_class_mod)\n   dt.form_cell_title(class=config.class_array.class_mod)\n    label(for=config.id) #{config.title}\n   dd.form_field_wrap(class=config.class_array.class_mod)\n    if config.type === 'text' || config.type === 'password' || config.type === 'email' || config.type === 'tel'\n     if config.value\n      input.form_field(value=config.value type=config.type id=config.id class='#{config.class_array.elem_class} #{config.add_class}' placeholder=config.placeholder)\n      block\n     else\n      input.form_field(type=config.type id=config.id class='#{config.class_array.elem_class} #{config.add_class}' placeholder=config.placeholder)\n      block\n    if config.type === 'textarea'\n     textarea.form_field(id=config.id class='#{config.class_array.elem_class} #{config.add_class}' placeholder=config.placeholder) #{config.value}\n     block\n    if config.type === 'file'\n     input.form_field(type=config.type id=config.id class='#{config.class_array.elem_class} #{config.add_class}' placeholder=config.placeholder)\n     .form_field_file_field\n      span.form_field_file_text #{config.title}\n      span.form_field_file_butt Choose File\n    if config.type === 'select'\n     select.form_field(id=config.id class='#{config.class_array.elem_class} #{config.add_class}' data-placeholder=config.placeholder)\n      each option in config.options\n       option(value=option)= option\n     block\n if config.type === 'checkbox' || config.type === 'radio'\n  label.radio_check(class=config.class_array.block_class_mod)\n   if config.checked\n    input.radio_check_input(name=config.name type=config.type class='#{config.class_array.elem_class} #{config.add_class}' checked='checked')\n   else\n    input.radio_check_input(name=config.name type=config.type class='#{config.class_array.elem_class} #{config.add_class}')\n   span.radio_check_text(class=config.class_array.class_mod) #{config.title}\n//- create text input\n+form_element({\n\ttype: 'text',\n\tclass_array: default_field,\n\ttitle: 'Input with title',\n\tid: 'text_1',\n\tplaceholder: 'Placeholder text'\n})\n+form_element({\n\ttype: 'text',\n\tclass_array: second_field,\n\ttitle: 'Input with horizontal layout',\n\tid: 'text_2',\n\tplaceholder: 'Placeholder text'\n})\n+form_element({\n\ttype: 'text',\n\tclass_array: default_field_hidden,\n\ttitle: 'Input without title',\n\tid: 'text_3',\n\tplaceholder: 'Input without title'\n})\n+form_element({\n\ttype: 'text',\n\tclass_array: default_field_hidden,\n\ttitle: 'Input with icon',\n\tid: 'text_4',\n\tplaceholder: 'With right icon',\n\tadd_class: 'right_icon_mod'\n})\n a.input_icon.right_mod.search_mod(href=\"#\") search\n+form_element({\n\ttype: 'text',\n\tclass_array: default_field_hidden,\n\ttitle: 'Input with icon',\n\tid: 'text_5',\n\tplaceholder: 'With left icon',\n\tadd_class: 'left_icon_mod'\n})\n a.input_icon.left_mod.search_mod(href=\"#\") search","parentReference":"2","wrapper":"<sg-wrapper-content/>","renderMarkup":"\n<dl class=\"form_cell form_cell_v1_mod\">\n  <dt class=\"form_cell_title form_v1_mod\">\n    <label for=\"text_1\">Input with title</label>\n  </dt>\n  <dd class=\"form_field_wrap form_v1_mod\">\n    <input type=\"text\" id=\"text_1\" placeholder=\"Placeholder text\" class=\"form_field default_mod \">\n  </dd>\n</dl>\n<dl class=\"form_cell form_cell_v2_mod\">\n  <dt class=\"form_cell_title form_v2_mod\">\n    <label for=\"text_2\">Input with horizontal layout</label>\n  </dt>\n  <dd class=\"form_field_wrap form_v2_mod\">\n    <input type=\"text\" id=\"text_2\" placeholder=\"Placeholder text\" class=\"form_field default_mod \">\n  </dd>\n</dl>\n<dl class=\"form_cell form_cell_v1_mod\">\n  <dt class=\"form_cell_title form_v1_mod hline_hide_mod\">\n    <label for=\"text_3\">Input without title</label>\n  </dt>\n  <dd class=\"form_field_wrap form_v1_mod hline_hide_mod\">\n    <input type=\"text\" id=\"text_3\" placeholder=\"Input without title\" class=\"form_field default_mod \">\n  </dd>\n</dl>\n<dl class=\"form_cell form_cell_v1_mod\">\n  <dt class=\"form_cell_title form_v1_mod hline_hide_mod\">\n    <label for=\"text_4\">Input with icon</label>\n  </dt>\n  <dd class=\"form_field_wrap form_v1_mod hline_hide_mod\">\n    <input type=\"text\" id=\"text_4\" placeholder=\"With right icon\" class=\"form_field default_mod right_icon_mod\"><a href=\"#\" class=\"input_icon right_mod search_mod\">search</a>\n  </dd>\n</dl>\n<dl class=\"form_cell form_cell_v1_mod\">\n  <dt class=\"form_cell_title form_v1_mod hline_hide_mod\">\n    <label for=\"text_5\">Input with icon</label>\n  </dt>\n  <dd class=\"form_field_wrap form_v1_mod hline_hide_mod\">\n    <input type=\"text\" id=\"text_5\" placeholder=\"With left icon\" class=\"form_field default_mod left_icon_mod\"><a href=\"#\" class=\"input_icon left_mod search_mod\">search</a>\n  </dd>\n</dl>","variables":["input_height","input_offset","input_font_size","font_1","input_text_color","input_radius","input_border_color","input_placeholder_color","input_placeholder_color","input_placeholder_color","input_border_color_active"],"fileHash":"59e31a54b3ca396d2ccd5c4df4833b47"},{"header":"Textarea","description":"<p class=\"sg\">Textarea with dl structure. In jade we define arrays with classes for input, mixin(form_element) and then invoke it. You should create all styles for the form elements in <b>assets/sass/_forms.scss</b> file.</p>\n","modifiers":[],"deprecated":false,"experimental":false,"reference":"2.2","markup":"\n<dl class=\"form_cell form_cell_v1_mod\">\n  <dt class=\"form_cell_title form_v1_mod\">\n    <label for=\"textarea_1\">Textarea with title</label>\n  </dt>\n  <dd class=\"form_field_wrap form_v1_mod\">\n    <textarea id=\"textarea_1\" placeholder=\"Placeholder text\" class=\"form_field default_mod textarea_mod_1\"></textarea>\n  </dd>\n</dl>\n<dl class=\"form_cell form_cell_v1_mod\">\n  <dt class=\"form_cell_title form_v1_mod hline_hide_mod\">\n    <label for=\"textarea_1\">Textarea without title</label>\n  </dt>\n  <dd class=\"form_field_wrap form_v1_mod hline_hide_mod\">\n    <textarea id=\"textarea_1\" placeholder=\"Textarea without title\" class=\"form_field default_mod textarea_mod_1\"></textarea>\n  </dd>\n</dl>","css":"// variables\r\n$font_1: sans-serif;\r\n$input_height: 4rem;\r\n$input_offset: 0 1rem;\r\n$input_font_size: $font_size_base;\r\n$input_border_color: gray;\r\n$input_border_color_active: $black;\r\n$input_placeholder_color: #aaa;\r\n$input_text_color: $black;\r\n$input_radius: $gl_radius;\r\n\r\n%form_field_default {\r\n\tdisplay: block;\r\n\twidth: 100%;\r\n\theight: $input_height;\r\n\tpadding: $input_offset;\r\n\tfont-size: $input_font_size;\r\n\tfont-family: $font_1;\r\n\tcolor: $input_text_color;\r\n\tborder:none;\r\n\tbox-shadow: 0 0 0 1px $input_border_color;\r\n\tborder-radius: $input_radius;\r\n\r\n\t&::-webkit-input-placeholder {\r\n\t\tcolor: $input_placeholder_color;\r\n\t}\r\n\r\n\t&::-moz-placeholder {\r\n\t\tcolor: $input_placeholder_color;\r\n\t}\r\n\t&:-ms-input-placeholder {\r\n\t\tcolor: $input_placeholder_color;\r\n\t}\r\n\r\n\t&.right_icon_mod {\r\n\t\tpadding-right: 4rem;\r\n\t}\r\n\r\n\t&.left_icon_mod {\r\n\t\tpadding-left: 4rem;\r\n\t}\r\n}\r\n\r\n%form_field_default_hover {\r\n}\r\n\r\n%form_field_default_active {\r\n\tbox-shadow: 0 0 0 1px $input_border_color_active;\r\n\t&::-webkit-input-placeholder {\r\n\t\tcolor: transparent;\r\n\t}\r\n\r\n\t&::-moz-placeholder {\r\n\t\tcolor: transparent;\r\n\t}\r\n\t&:-ms-input-placeholder {\r\n\t\tcolor: transparent;\r\n\t}\r\n}\r\n\r\n.form_cell {\r\n\t&.hidden_field {\r\n\t\tdisplay: none;\r\n\t}\r\n\r\n\t&.form_cell_v1_mod {\r\n\t\twidth: 50%;\r\n\t\tmin-width: 24rem;\r\n\t\tmargin: 3rem 0 0;\r\n\r\n\t\t&:first-child {\r\n\t\t\tmargin: 0;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n.form_cell_title {\r\n\r\n\t&.hline_hide_mod {\r\n\t\tdisplay: none;\r\n\t}\r\n\t&.form_v1_mod {\r\n\t\tmargin: 0 0 .4rem;\r\n\t}\r\n}\r\n\r\n.form_field_wrap {\r\n\tposition: relative;\r\n\r\n\t&.form_v1_mod {\r\n\t}\r\n}\r\n\r\n.form_field:not(.select_rediz_coosen) {\r\n\t&.default_mod {\r\n\t\t@extend %form_field_default;\r\n\r\n\t\t&:focus {\r\n\t\t\t@extend %form_field_default_active;\r\n\t\t}\r\n\t}\r\n\t&.textarea_mod_1 {\r\n\t\theight: 20rem;\r\n\t\tpadding:1rem;\r\n\t}\r\n}","syntax":"scss","file":"_forms.scss","markupJade":"//- arrays for form elements\n- var default_field = {block_class_mod:'form_cell_v1_mod',class_mod:'form_v1_mod', elem_class:'default_mod'}\n- var default_field_hidden = {block_class_mod:'form_cell_v1_mod',class_mod:'form_v1_mod hline_hide_mod', elem_class:'default_mod'}\n//- mixin for form elements\nmixin form_element(config)\n //- default values\n - config.class_array = config.class_array || {}\n - config.class_array.block_class_mod = config.class_array.block_class_mod || ''\n - config.class_array.class_mod = config.class_array.class_mod || ''\n - config.class_array.elem_class = config.class_array.elem_class || ''\n - config.add_class = config.add_class || ''\n - config.placeholder = config.placeholder || ''\n if !config.id\n  - config.id = config.title.replace(/\\s/g, '_').replace(/[.,:;(){}/?!@#$%&*]/g, '')\n else\n  - config.id = config.id.replace(/\\s/g, '_').replace(/[.,:;(){}/?!@#$%&*]/g, '')\n if config.type === 'text' || config.type === 'password' || config.type === 'email' || config.type === 'tel' || config.type === 'textarea' || config.type === 'select' || config.type === 'file'\n  dl.form_cell(class=config.class_array.block_class_mod)\n   dt.form_cell_title(class=config.class_array.class_mod)\n    label(for=config.id) #{config.title}\n   dd.form_field_wrap(class=config.class_array.class_mod)\n    if config.type === 'text' || config.type === 'password' || config.type === 'email' || config.type === 'tel'\n     if config.value\n      input.form_field(value=config.value type=config.type id=config.id class='#{config.class_array.elem_class} #{config.add_class}' placeholder=config.placeholder)\n      block\n     else\n      input.form_field(type=config.type id=config.id class='#{config.class_array.elem_class} #{config.add_class}' placeholder=config.placeholder)\n      block\n    if config.type === 'textarea'\n     textarea.form_field(id=config.id class='#{config.class_array.elem_class} #{config.add_class}' placeholder=config.placeholder) #{config.value}\n     block\n    if config.type === 'file'\n     input.form_field(type=config.type id=config.id class='#{config.class_array.elem_class} #{config.add_class}' placeholder=config.placeholder)\n     .form_field_file_field\n      span.form_field_file_text #{config.title}\n      span.form_field_file_butt Choose File\n    if config.type === 'select'\n     select.form_field(id=config.id class='#{config.class_array.elem_class} #{config.add_class}' data-placeholder=config.placeholder)\n      each option in config.options\n       option(value=option)= option\n     block\n if config.type === 'checkbox' || config.type === 'radio'\n  label.radio_check(class=config.class_array.block_class_mod)\n   if config.checked\n    input.radio_check_input(name=config.name type=config.type class='#{config.class_array.elem_class} #{config.add_class}' checked='checked')\n   else\n    input.radio_check_input(name=config.name type=config.type class='#{config.class_array.elem_class} #{config.add_class}')\n   span.radio_check_text(class=config.class_array.class_mod) #{config.title}\n//- create textarea\n+form_element({\n\ttype: 'textarea',\n\tclass_array: default_field,\n\ttitle: 'Textarea with title',\n\tid: 'textarea_1',\n\tplaceholder: 'Placeholder text',\n\tadd_class: 'textarea_mod_1'\n})\n+form_element({\n\ttype: 'textarea',\n\tclass_array: default_field_hidden,\n\ttitle: 'Textarea without title',\n\tid: 'textarea_1',\n\tplaceholder: 'Textarea without title',\n\tadd_class: 'textarea_mod_1'\n})","parentReference":"2","wrapper":"<sg-wrapper-content/>","renderMarkup":"\n<dl class=\"form_cell form_cell_v1_mod\">\n  <dt class=\"form_cell_title form_v1_mod\">\n    <label for=\"textarea_1\">Textarea with title</label>\n  </dt>\n  <dd class=\"form_field_wrap form_v1_mod\">\n    <textarea id=\"textarea_1\" placeholder=\"Placeholder text\" class=\"form_field default_mod textarea_mod_1\"></textarea>\n  </dd>\n</dl>\n<dl class=\"form_cell form_cell_v1_mod\">\n  <dt class=\"form_cell_title form_v1_mod hline_hide_mod\">\n    <label for=\"textarea_1\">Textarea without title</label>\n  </dt>\n  <dd class=\"form_field_wrap form_v1_mod hline_hide_mod\">\n    <textarea id=\"textarea_1\" placeholder=\"Textarea without title\" class=\"form_field default_mod textarea_mod_1\"></textarea>\n  </dd>\n</dl>","variables":["input_height","input_offset","input_font_size","font_1","input_text_color","input_border_color","input_radius","input_placeholder_color","input_placeholder_color","input_placeholder_color","input_border_color_active"],"fileHash":"59e31a54b3ca396d2ccd5c4df4833b47"},{"header":"Checkbox","description":"<p class=\"sg\">Checkbox with custom styling. In jade we define arrays with classes for input, mixin(form_element) and then invoke it. You should create all styles for the form elements in <b>assets/sass/_forms.scss</b> file.</p>\n","modifiers":[],"deprecated":false,"experimental":false,"reference":"2.3","markup":"\n<label class=\"radio_check check_1_mod\">\n  <input name=\"check\" type=\"checkbox\" class=\"radio_check_input check_1_mod \"><span class=\"radio_check_text check_1_mod\">Title of checkbox</span>\n</label>\n<label class=\"radio_check check_1_mod\">\n  <input name=\"check\" type=\"checkbox\" class=\"radio_check_input check_1_mod \"><span class=\"radio_check_text check_1_mod\">Title of checkbox with a very long text and you can paste here any text</span>\n</label>","css":"// variables\r\n$brand_default_color: #3498db;\r\n\r\n.radio_check {\r\n\twidth:50%;\r\n\tmin-width:30rem;\r\n\r\n\tmargin: 2rem 0 0;\r\n\r\n\t&:first-child {\r\n\t\tmargin: 0;\r\n\t}\r\n\r\n\t&.check_1_mod {\r\n\t\tdisplay: inline-block;\r\n\t\tcursor:pointer;\r\n\t}\r\n}\r\n\r\n.radio_check_input {\r\n\t&.check_1_mod {\r\n\t\tdisplay: none;\r\n\t}\r\n}\r\n\r\n.radio_check_text {\r\n\t&.check_1_mod {\r\n\t\tposition: relative;\r\n\t\tdisplay: inline-block;\r\n\t\tpadding:0 0 0 3rem;\r\n\r\n\t\t&:before,&:after {\r\n\t\t\tposition: absolute;\r\n\t\t\ttop: -.2rem;\r\n\t\t\tleft: 0;\r\n\t\t\twidth: 2rem;\r\n\t\t\theight: 2rem;\r\n\t\t\tcursor:pointer;\r\n\t\t}\r\n\r\n\t\t&:before {\r\n\t\t\tcontent: '';\r\n\t\t\tborder-radius:.2rem;\r\n\t\t\tborder:1px solid $brand_default_color;\r\n\t\t}\r\n\r\n\t\t&:after {\r\n\t\t\t@extend %icon-check:before;\r\n\r\n\t\t\ttext-align: center;\r\n\t\t\tline-height: 20px;\r\n\t\t\topacity: 0;\r\n\t\t\tcolor:$brand_default_color;\r\n\t\t\ttransition:opacity .3s ease;\r\n\r\n\t\t\t.radio_check_input:checked + & {\r\n\t\t\t\topacity: 1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","syntax":"scss","file":"_forms.scss","markupJade":"//- arrays for form elements\n- var default_checkbox = {block_class_mod:'check_1_mod',class_mod:'check_1_mod', elem_class:'check_1_mod'}\n- var default_radio = {block_class_mod:'radio_1_mod',class_mod:'radio_1_mod', elem_class:'radio_1_mod'}\n//- mixin for form elements\nmixin form_element(config)\n //- default values\n - config.class_array = config.class_array || {}\n - config.class_array.block_class_mod = config.class_array.block_class_mod || ''\n - config.class_array.class_mod = config.class_array.class_mod || ''\n - config.class_array.elem_class = config.class_array.elem_class || ''\n - config.add_class = config.add_class || ''\n - config.placeholder = config.placeholder || ''\n if !config.id\n  - config.id = config.title.replace(/\\s/g, '_').replace(/[.,:;(){}/?!@#$%&*]/g, '')\n else\n  - config.id = config.id.replace(/\\s/g, '_').replace(/[.,:;(){}/?!@#$%&*]/g, '')\n if config.type === 'text' || config.type === 'password' || config.type === 'email' || config.type === 'tel' || config.type === 'textarea' || config.type === 'select' || config.type === 'file'\n  dl.form_cell(class=config.class_array.block_class_mod)\n   dt.form_cell_title(class=config.class_array.class_mod)\n    label(for=config.id) #{config.title}\n   dd.form_field_wrap(class=config.class_array.class_mod)\n    if config.type === 'text' || config.type === 'password' || config.type === 'email' || config.type === 'tel'\n     if config.value\n      input.form_field(value=config.value type=config.type id=config.id class='#{config.class_array.elem_class} #{config.add_class}' placeholder=config.placeholder)\n      block\n     else\n      input.form_field(type=config.type id=config.id class='#{config.class_array.elem_class} #{config.add_class}' placeholder=config.placeholder)\n      block\n    if config.type === 'textarea'\n     textarea.form_field(id=config.id class='#{config.class_array.elem_class} #{config.add_class}' placeholder=config.placeholder) #{config.value}\n     block\n    if config.type === 'file'\n     input.form_field(type=config.type id=config.id class='#{config.class_array.elem_class} #{config.add_class}' placeholder=config.placeholder)\n     .form_field_file_field\n      span.form_field_file_text #{config.title}\n      span.form_field_file_butt Choose File\n    if config.type === 'select'\n     select.form_field(id=config.id class='#{config.class_array.elem_class} #{config.add_class}' data-placeholder=config.placeholder)\n      each option in config.options\n       option(value=option)= option\n     block\n if config.type === 'checkbox' || config.type === 'radio'\n  label.radio_check(class=config.class_array.block_class_mod)\n   if config.checked\n    input.radio_check_input(name=config.name type=config.type class='#{config.class_array.elem_class} #{config.add_class}' checked='checked')\n   else\n    input.radio_check_input(name=config.name type=config.type class='#{config.class_array.elem_class} #{config.add_class}')\n   span.radio_check_text(class=config.class_array.class_mod) #{config.title}\n//- create checkbox\n+form_element({\n type: 'checkbox',\n class_array: default_checkbox,\n title: 'Title of checkbox',\n name: 'check',\n checked: false\n})\n+form_element({\n type: 'checkbox',\n class_array: default_checkbox,\n title: 'Title of checkbox with a very long text and you can paste here any text',\n name: 'check',\n checked: false\n})","parentReference":"2","wrapper":"<sg-wrapper-content/>","renderMarkup":"\n<label class=\"radio_check check_1_mod\">\n  <input name=\"check\" type=\"checkbox\" class=\"radio_check_input check_1_mod \"><span class=\"radio_check_text check_1_mod\">Title of checkbox</span>\n</label>\n<label class=\"radio_check check_1_mod\">\n  <input name=\"check\" type=\"checkbox\" class=\"radio_check_input check_1_mod \"><span class=\"radio_check_text check_1_mod\">Title of checkbox with a very long text and you can paste here any text</span>\n</label>","variables":["brand_default_color","brand_default_color"],"fileHash":"59e31a54b3ca396d2ccd5c4df4833b47"},{"header":"Radio","description":"<p class=\"sg\">Radio buttons with custom styling. In jade we define arrays with classes for input, mixin(form_element) and then invoke it. You should create all styles for the form elements in <b>assets/sass/_forms.scss</b> file.</p>\n","modifiers":[],"deprecated":false,"experimental":false,"reference":"2.4","markup":"\n<label class=\"radio_check radio_1_mod\">\n  <input name=\"radio\" type=\"radio\" class=\"radio_check_input radio_1_mod \"><span class=\"radio_check_text radio_1_mod\">Title of the radio</span>\n</label>\n<label class=\"radio_check radio_1_mod\">\n  <input name=\"radio\" type=\"radio\" checked=\"checked\" class=\"radio_check_input radio_1_mod \"><span class=\"radio_check_text radio_1_mod\">Title of the radio with a very long text and you can paste here any text</span>\n</label>","css":"// variables\r\n$brand_default_color: #3498db;\r\n\r\n.radio_check {\r\n\twidth:50%;\r\n\tmin-width:30rem;\r\n\r\n\tmargin: 2rem 0 0;\r\n\r\n\t&:first-child {\r\n\t\tmargin: 0;\r\n\t}\r\n\r\n\t&.radio_1_mod {\r\n\t\tdisplay: inline-block;\r\n\t\tcursor:pointer;\r\n\t}\r\n}\r\n\r\n.radio_check_input {\r\n\t&.radio_1_mod {\r\n\t\tdisplay: none;\r\n\t}\r\n}\r\n\r\n.radio_check_text {\r\n\t&.radio_1_mod {\r\n\t\tposition: relative;\r\n\t\tdisplay: inline-block;\r\n\t\tpadding:0 0 0 3rem;\r\n\r\n\t\t&:before {\r\n\t\t\tcontent: '';\r\n\t\t\tposition: absolute;\r\n\t\t\ttop: -.2rem;\r\n\t\t\tleft: 0;\r\n\t\t\twidth: 2rem;\r\n\t\t\theight: 2rem;\r\n\t\t\tborder-radius:100%;\r\n\t\t\tborder:2px solid $brand_default_color;\r\n\t\t\tcursor:pointer;\r\n\t\t}\r\n\r\n\t\t&:after {\r\n\t\t\tcontent:'';\r\n\t\t\tposition: absolute;\r\n\t\t\ttop: .3rem;\r\n\t\t\tleft: .5rem;\r\n\t\t\twidth: 1rem;\r\n\t\t\theight: 1rem;\r\n\t\t\tborder-radius: 100%;\r\n\t\t\tbackground: $brand_default_color;\r\n\t\t\ttransform:scale(0);\r\n\t\t\ttransition:transform .3s ease;\r\n\r\n\t\t\t.radio_check_input:checked + & {\r\n\t\t\t\ttransform:scale(1);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","syntax":"scss","file":"_forms.scss","markupJade":"//- arrays for form elements\n- var default_checkbox = {block_class_mod:'check_1_mod',class_mod:'check_1_mod', elem_class:'check_1_mod'}\n- var default_radio = {block_class_mod:'radio_1_mod',class_mod:'radio_1_mod', elem_class:'radio_1_mod'}\n//- mixin for form elements\nmixin form_element(config)\n //- default values\n - config.class_array = config.class_array || {}\n - config.class_array.block_class_mod = config.class_array.block_class_mod || ''\n - config.class_array.class_mod = config.class_array.class_mod || ''\n - config.class_array.elem_class = config.class_array.elem_class || ''\n - config.add_class = config.add_class || ''\n - config.placeholder = config.placeholder || ''\n if !config.id\n  - config.id = config.title.replace(/\\s/g, '_').replace(/[.,:;(){}/?!@#$%&*]/g, '')\n else\n  - config.id = config.id.replace(/\\s/g, '_').replace(/[.,:;(){}/?!@#$%&*]/g, '')\n if config.type === 'text' || config.type === 'password' || config.type === 'email' || config.type === 'tel' || config.type === 'textarea' || config.type === 'select' || config.type === 'file'\n  dl.form_cell(class=config.class_array.block_class_mod)\n   dt.form_cell_title(class=config.class_array.class_mod)\n    label(for=config.id) #{config.title}\n   dd.form_field_wrap(class=config.class_array.class_mod)\n    if config.type === 'text' || config.type === 'password' || config.type === 'email' || config.type === 'tel'\n     if config.value\n      input.form_field(value=config.value type=config.type id=config.id class='#{config.class_array.elem_class} #{config.add_class}' placeholder=config.placeholder)\n      block\n     else\n      input.form_field(type=config.type id=config.id class='#{config.class_array.elem_class} #{config.add_class}' placeholder=config.placeholder)\n      block\n    if config.type === 'textarea'\n     textarea.form_field(id=config.id class='#{config.class_array.elem_class} #{config.add_class}' placeholder=config.placeholder) #{config.value}\n     block\n    if config.type === 'file'\n     input.form_field(type=config.type id=config.id class='#{config.class_array.elem_class} #{config.add_class}' placeholder=config.placeholder)\n     .form_field_file_field\n      span.form_field_file_text #{config.title}\n      span.form_field_file_butt Choose File\n    if config.type === 'select'\n     select.form_field(id=config.id class='#{config.class_array.elem_class} #{config.add_class}' data-placeholder=config.placeholder)\n      each option in config.options\n       option(value=option)= option\n     block\n if config.type === 'checkbox' || config.type === 'radio'\n  label.radio_check(class=config.class_array.block_class_mod)\n   if config.checked\n    input.radio_check_input(name=config.name type=config.type class='#{config.class_array.elem_class} #{config.add_class}' checked='checked')\n   else\n    input.radio_check_input(name=config.name type=config.type class='#{config.class_array.elem_class} #{config.add_class}')\n   span.radio_check_text(class=config.class_array.class_mod) #{config.title}\n//- create radio button\n+form_element({\n type: 'radio',\n class_array: default_radio,\n title: 'Title of the radio',\n name: 'radio',\n checked: false\n})\n+form_element({\n type: 'radio',\n class_array: default_radio,\n title: 'Title of the radio with a very long text and you can paste here any text',\n name: 'radio',\n checked: true\n})","parentReference":"2","wrapper":"<sg-wrapper-content/>","renderMarkup":"\n<label class=\"radio_check radio_1_mod\">\n  <input name=\"radio\" type=\"radio\" class=\"radio_check_input radio_1_mod \"><span class=\"radio_check_text radio_1_mod\">Title of the radio</span>\n</label>\n<label class=\"radio_check radio_1_mod\">\n  <input name=\"radio\" type=\"radio\" checked=\"checked\" class=\"radio_check_input radio_1_mod \"><span class=\"radio_check_text radio_1_mod\">Title of the radio with a very long text and you can paste here any text</span>\n</label>","variables":["brand_default_color","brand_default_color"],"fileHash":"59e31a54b3ca396d2ccd5c4df4833b47"},{"header":"Select","description":"<p class=\"sg\">Select with custom styling. In jade we define arrays with classes for input, mixin(form_element) and then invoke it. You should create all styles for the form elements in <b>assets/sass/_forms.scss</b> file. We use <a href=\"https://harvesthq.github.io/chosen/\" target=\"_blank\" class=\"sg\">chosen</a> jQuery plugin for select styling.</p>\n","modifiers":[],"deprecated":false,"experimental":false,"reference":"2.5","markup":"\n<div class=\"test_container\">\n  <dl class=\"form_cell form_cell_v1_mod\">\n    <dt class=\"form_cell_title form_v1_mod\">\n      <label for=\"select\">some title</label>\n    </dt>\n    <dd class=\"form_field_wrap form_v1_mod\">\n      <select id=\"select\" data-placeholder=\"\" class=\"form_field default_mod \">\n        <option value=\"Option 1\">Option 1</option>\n        <option value=\"Option 2\">Option 2</option>\n        <option value=\"Option 3\">Option 3</option>\n      </select>\n    </dd>\n  </dl>\n</div>","css":".test_container {\r\n\tmin-height: 25rem;\r\n}","syntax":"scss","file":"_forms.scss","markupJade":"//- arrays for form elements\n- var default_field = {block_class_mod:'form_cell_v1_mod',class_mod:'form_v1_mod', elem_class:'default_mod'}\n- var default_field_hidden = {block_class_mod:'form_cell_v1_mod',class_mod:'form_v1_mod hline_hide_mod', elem_class:'default_mod'}\n//- mixin for form elements\nmixin form_element(config)\n //- default values\n - config.class_array = config.class_array || {}\n - config.class_array.block_class_mod = config.class_array.block_class_mod || ''\n - config.class_array.class_mod = config.class_array.class_mod || ''\n - config.class_array.elem_class = config.class_array.elem_class || ''\n - config.add_class = config.add_class || ''\n - config.placeholder = config.placeholder || ''\n if !config.id\n  - config.id = config.title.replace(/\\s/g, '_').replace(/[.,:;(){}/?!@#$%&*]/g, '')\n else\n  - config.id = config.id.replace(/\\s/g, '_').replace(/[.,:;(){}/?!@#$%&*]/g, '')\n if config.type === 'text' || config.type === 'password' || config.type === 'email' || config.type === 'tel' || config.type === 'textarea' || config.type === 'select' || config.type === 'file'\n  dl.form_cell(class=config.class_array.block_class_mod)\n   dt.form_cell_title(class=config.class_array.class_mod)\n    label(for=config.id) #{config.title}\n   dd.form_field_wrap(class=config.class_array.class_mod)\n    if config.type === 'text' || config.type === 'password' || config.type === 'email' || config.type === 'tel'\n     if config.value\n      input.form_field(value=config.value type=config.type id=config.id class='#{config.class_array.elem_class} #{config.add_class}' placeholder=config.placeholder)\n      block\n     else\n      input.form_field(type=config.type id=config.id class='#{config.class_array.elem_class} #{config.add_class}' placeholder=config.placeholder)\n      block\n    if config.type === 'textarea'\n     textarea.form_field(id=config.id class='#{config.class_array.elem_class} #{config.add_class}' placeholder=config.placeholder) #{config.value}\n     block\n    if config.type === 'file'\n     input.form_field(type=config.type id=config.id class='#{config.class_array.elem_class} #{config.add_class}' placeholder=config.placeholder)\n     .form_field_file_field\n      span.form_field_file_text #{config.title}\n      span.form_field_file_butt Choose File\n    if config.type === 'select'\n     select.form_field(id=config.id class='#{config.class_array.elem_class} #{config.add_class}' data-placeholder=config.placeholder)\n      each option in config.options\n       option(value=option)= option\n     block\n if config.type === 'checkbox' || config.type === 'radio'\n  label.radio_check(class=config.class_array.block_class_mod)\n   if config.checked\n    input.radio_check_input(name=config.name type=config.type class='#{config.class_array.elem_class} #{config.add_class}' checked='checked')\n   else\n    input.radio_check_input(name=config.name type=config.type class='#{config.class_array.elem_class} #{config.add_class}')\n   span.radio_check_text(class=config.class_array.class_mod) #{config.title}\n//- create select\n.test_container\n +form_element({\n \ttype: 'select',\n \tclass_array: default_field,\n \ttitle: 'some title',\n \tid: 'select',\n \toptions: ['Option 1', 'Option 2', 'Option 3']\n })","parentReference":"2","wrapper":"<sg-wrapper-content/>","renderMarkup":"\n<div class=\"test_container\">\n  <dl class=\"form_cell form_cell_v1_mod\">\n    <dt class=\"form_cell_title form_v1_mod\">\n      <label for=\"select\">some title</label>\n    </dt>\n    <dd class=\"form_field_wrap form_v1_mod\">\n      <select id=\"select\" data-placeholder=\"\" class=\"form_field default_mod \">\n        <option value=\"Option 1\">Option 1</option>\n        <option value=\"Option 2\">Option 2</option>\n        <option value=\"Option 3\">Option 3</option>\n      </select>\n    </dd>\n  </dl>\n</div>","variables":[],"fileHash":"59e31a54b3ca396d2ccd5c4df4833b47"},{"header":"Section title","description":"<p class=\"sg\">Titles can have different colors,sizes and alignment. It can be quietly difficult to create semantic classes such as &apos;big_mod&apos; or &apos;small_mod&apos;, so we decided to create version-model-classes.</p>\n","modifiers":[{"id":1,"name":".v1_mod","description":"First version of the title","className":"v1_mod","markup":"\n<h2 class=\"section_title {$modifiers}\">Title of the section</h2>","markupJade":"h2.section_title(class=\"{$modifiers}\") Title of the section","renderMarkup":"\n<h2 class=\"section_title {$modifiers}\">Title of the section</h2>"},{"id":2,"name":".v1_mod.gray_mod","description":"Color modifier","className":"v1_mod gray_mod","markup":"\n<h2 class=\"section_title {$modifiers}\">Title of the section</h2>","markupJade":"h2.section_title(class=\"{$modifiers}\") Title of the section","renderMarkup":"\n<h2 class=\"section_title {$modifiers}\">Title of the section</h2>"},{"id":3,"name":".v1_mod.center_mod","description":"Alignment modifier","className":"v1_mod center_mod","markup":"\n<h2 class=\"section_title {$modifiers}\">Title of the section</h2>","markupJade":"h2.section_title(class=\"{$modifiers}\") Title of the section","renderMarkup":"\n<h2 class=\"section_title {$modifiers}\">Title of the section</h2>"},{"id":4,"name":".v2_mod","description":"Second version of the title","className":"v2_mod","markup":"\n<h2 class=\"section_title {$modifiers}\">Title of the section</h2>","markupJade":"h2.section_title(class=\"{$modifiers}\") Title of the section","renderMarkup":"\n<h2 class=\"section_title {$modifiers}\">Title of the section</h2>"},{"id":5,"name":".v2_mod.bordered_up_mod","description":"Decor modifier(border in this case)","className":"v2_mod bordered_up_mod","markup":"\n<h2 class=\"section_title {$modifiers}\">Title of the section</h2>","markupJade":"h2.section_title(class=\"{$modifiers}\") Title of the section","renderMarkup":"\n<h2 class=\"section_title {$modifiers}\">Title of the section</h2>"},{"id":6,"name":".v2_mod.bordered_down_mod.gray_mod","description":"Another decor modifier(border in this case) + color modifier","className":"v2_mod bordered_down_mod gray_mod","markup":"\n<h2 class=\"section_title {$modifiers}\">Title of the section</h2>","markupJade":"h2.section_title(class=\"{$modifiers}\") Title of the section","renderMarkup":"\n<h2 class=\"section_title {$modifiers}\">Title of the section</h2>"},{"id":7,"name":".v2_mod.bordered_down_mod.inline_mod","description":"Another decor modifier(border in this case) + box-model modifier","className":"v2_mod bordered_down_mod inline_mod","markup":"\n<h2 class=\"section_title {$modifiers}\">Title of the section</h2>","markupJade":"h2.section_title(class=\"{$modifiers}\") Title of the section","renderMarkup":"\n<h2 class=\"section_title {$modifiers}\">Title of the section</h2>"}],"deprecated":false,"experimental":false,"reference":"3","markup":"\n<h2 class=\"section_title {$modifiers}\">Title of the section</h2>","css":".section_title {\r\n\t&.gray_mod {\r\n\t\tcolor:#aaa;\r\n\t}\r\n\r\n\t&.v1_mod {\r\n\t\tfont-size: 3rem;\r\n\t\ttext-transform: uppercase;\r\n\r\n\t\t&.center_mod {\r\n\t\t\ttext-align: center;\r\n\t\t}\r\n\t}\r\n\t&.v2_mod {\r\n\t\tfont-family:'Times New Roman',sans-serif;\r\n\t\tfont-size: 4rem;\r\n\t\tfont-weight: 400;\r\n\r\n\t\t&.bordered_up_mod {\r\n\t\t\tborder-top:1px solid currentColor;\r\n\t\t}\r\n\r\n\t\t&.bordered_down_mod {\r\n\t\t\tborder-bottom:1px solid currentColor;\r\n\t\t}\r\n\r\n\t\t&.inline_mod {\r\n\t\t\tdisplay: inline-block;\r\n\t\t}\r\n\t}\r\n}","syntax":"scss","file":"_titles.scss","markupJade":"h2.section_title(class=\"{$modifiers}\") Title of the section","wrapper":"<sg-wrapper-content/>","renderMarkup":"\n<h2 class=\"section_title {$modifiers}\">Title of the section</h2>","variables":[],"fileHash":"f6459127886408870348a36d127e11de"},{"header":"Dropdown","description":"<p class=\"sg\">We use additional classes for dropdowns. So you can just add these classes and styles to your existing elements and they becomes dropdowns. You can find marup, styles and scripts for dropdowns in <b>helpers/components/dropdowns</b> folder.</p>\n","modifiers":[{"id":1,"name":".down_left_mod","description":"Dropdown opened on down and left sides","className":"down_left_mod","markup":"\n<div class=\"test_container center_mod\">\n  <div class=\"dropdown_container dropdownContainer\"><a href=\"#\" class=\"dropdown_trigger dropdownTrigger\">Home</a>\n    <div class=\"dropdown_content {$modifiers}\">\n      <ul class=\"dropdown_list\">\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Lorem</a></li>\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Ipsum</a></li>\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Dolor</a></li>\n      </ul>\n    </div>\n  </div>\n</div>","markupJade":".test_container.center_mod\n .dropdown_container.dropdownContainer\n  a.dropdown_trigger.dropdownTrigger(href=\"#\") Home\n  .dropdown_content(class=\"{$modifiers}\")\n   ul.dropdown_list\n    li.dropdown_item\n     a.dropdown_link(href=\"#\") Lorem\n    li.dropdown_item\n     a.dropdown_link(href=\"#\") Ipsum\n    li.dropdown_item\n     a.dropdown_link(href=\"#\") Dolor","renderMarkup":"\n<div class=\"test_container center_mod\">\n  <div class=\"dropdown_container dropdownContainer\"><a href=\"#\" class=\"dropdown_trigger dropdownTrigger\">Home</a>\n    <div class=\"dropdown_content {$modifiers}\">\n      <ul class=\"dropdown_list\">\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Lorem</a></li>\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Ipsum</a></li>\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Dolor</a></li>\n      </ul>\n    </div>\n  </div>\n</div>"},{"id":2,"name":".down_right_mod","description":"Dropdown opened on down and right sides","className":"down_right_mod","markup":"\n<div class=\"test_container center_mod\">\n  <div class=\"dropdown_container dropdownContainer\"><a href=\"#\" class=\"dropdown_trigger dropdownTrigger\">Home</a>\n    <div class=\"dropdown_content {$modifiers}\">\n      <ul class=\"dropdown_list\">\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Lorem</a></li>\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Ipsum</a></li>\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Dolor</a></li>\n      </ul>\n    </div>\n  </div>\n</div>","markupJade":".test_container.center_mod\n .dropdown_container.dropdownContainer\n  a.dropdown_trigger.dropdownTrigger(href=\"#\") Home\n  .dropdown_content(class=\"{$modifiers}\")\n   ul.dropdown_list\n    li.dropdown_item\n     a.dropdown_link(href=\"#\") Lorem\n    li.dropdown_item\n     a.dropdown_link(href=\"#\") Ipsum\n    li.dropdown_item\n     a.dropdown_link(href=\"#\") Dolor","renderMarkup":"\n<div class=\"test_container center_mod\">\n  <div class=\"dropdown_container dropdownContainer\"><a href=\"#\" class=\"dropdown_trigger dropdownTrigger\">Home</a>\n    <div class=\"dropdown_content {$modifiers}\">\n      <ul class=\"dropdown_list\">\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Lorem</a></li>\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Ipsum</a></li>\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Dolor</a></li>\n      </ul>\n    </div>\n  </div>\n</div>"},{"id":3,"name":".up_left_mod","description":"Dropdown opened on up and left sides","className":"up_left_mod","markup":"\n<div class=\"test_container center_mod\">\n  <div class=\"dropdown_container dropdownContainer\"><a href=\"#\" class=\"dropdown_trigger dropdownTrigger\">Home</a>\n    <div class=\"dropdown_content {$modifiers}\">\n      <ul class=\"dropdown_list\">\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Lorem</a></li>\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Ipsum</a></li>\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Dolor</a></li>\n      </ul>\n    </div>\n  </div>\n</div>","markupJade":".test_container.center_mod\n .dropdown_container.dropdownContainer\n  a.dropdown_trigger.dropdownTrigger(href=\"#\") Home\n  .dropdown_content(class=\"{$modifiers}\")\n   ul.dropdown_list\n    li.dropdown_item\n     a.dropdown_link(href=\"#\") Lorem\n    li.dropdown_item\n     a.dropdown_link(href=\"#\") Ipsum\n    li.dropdown_item\n     a.dropdown_link(href=\"#\") Dolor","renderMarkup":"\n<div class=\"test_container center_mod\">\n  <div class=\"dropdown_container dropdownContainer\"><a href=\"#\" class=\"dropdown_trigger dropdownTrigger\">Home</a>\n    <div class=\"dropdown_content {$modifiers}\">\n      <ul class=\"dropdown_list\">\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Lorem</a></li>\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Ipsum</a></li>\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Dolor</a></li>\n      </ul>\n    </div>\n  </div>\n</div>"},{"id":4,"name":".up_right_mod","description":"Dropdown opened on up and right sides","className":"up_right_mod","markup":"\n<div class=\"test_container center_mod\">\n  <div class=\"dropdown_container dropdownContainer\"><a href=\"#\" class=\"dropdown_trigger dropdownTrigger\">Home</a>\n    <div class=\"dropdown_content {$modifiers}\">\n      <ul class=\"dropdown_list\">\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Lorem</a></li>\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Ipsum</a></li>\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Dolor</a></li>\n      </ul>\n    </div>\n  </div>\n</div>","markupJade":".test_container.center_mod\n .dropdown_container.dropdownContainer\n  a.dropdown_trigger.dropdownTrigger(href=\"#\") Home\n  .dropdown_content(class=\"{$modifiers}\")\n   ul.dropdown_list\n    li.dropdown_item\n     a.dropdown_link(href=\"#\") Lorem\n    li.dropdown_item\n     a.dropdown_link(href=\"#\") Ipsum\n    li.dropdown_item\n     a.dropdown_link(href=\"#\") Dolor","renderMarkup":"\n<div class=\"test_container center_mod\">\n  <div class=\"dropdown_container dropdownContainer\"><a href=\"#\" class=\"dropdown_trigger dropdownTrigger\">Home</a>\n    <div class=\"dropdown_content {$modifiers}\">\n      <ul class=\"dropdown_list\">\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Lorem</a></li>\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Ipsum</a></li>\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Dolor</a></li>\n      </ul>\n    </div>\n  </div>\n</div>"}],"deprecated":false,"experimental":false,"reference":"4","markup":"\n<div class=\"test_container center_mod\">\n  <div class=\"dropdown_container dropdownContainer\"><a href=\"#\" class=\"dropdown_trigger dropdownTrigger\">Home</a>\n    <div class=\"dropdown_content {$modifiers}\">\n      <ul class=\"dropdown_list\">\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Lorem</a></li>\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Ipsum</a></li>\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Dolor</a></li>\n      </ul>\n    </div>\n  </div>\n</div>","css":"// variables\r\n$white:#fff;\r\n$brand_default_color: #3498db;\r\n\r\n// mixins\r\n@mixin triangle_narrow($side,$color,$size) {\r\n\t$narrow_size: $size/2;\r\n\t@if $side == left {\r\n\t\tborder:$narrow_size solid transparent;\r\n\t\tborder-right:$size solid $color;\r\n\t}\r\n\t@if $side == right {\r\n\t\tborder:$narrow_size solid transparent;\r\n\t\tborder-left:$size solid $color;\r\n\t}\r\n\t@if $side == top {\r\n\t\tborder:$narrow_size solid transparent;\r\n\t\tborder-bottom:$size solid $color;\r\n\t}\r\n\t@if $side == bottom {\r\n\t\tborder:$narrow_size solid transparent;\r\n\t\tborder-top:$size solid $color;\r\n\t}\r\n}\r\n\r\n.dropdown_container {\r\n\tposition: relative;\r\n\tdisplay: inline-block;\r\n}\r\n\r\n.dropdown_trigger {\r\n\tposition: relative;\r\n\tdisplay: inline-block;\r\n\tpadding:0 3rem 0 1rem;\r\n\theight: 4rem;\r\n\tline-height: 4rem;\r\n\tcolor:$white;\r\n\tborder-radius:1rem;\r\n\tbackground: $brand_default_color;\r\n\r\n\t&:hover, &:focus {\r\n\t\ttext-decoration: none;\r\n\t}\r\n\r\n\t&:before {\r\n\t\tcontent: '';\r\n\t\tposition: absolute;\r\n\t\tright: 1rem;\r\n\t\ttop: 50%;\r\n\t\tmargin-top:-.4rem;\r\n\r\n\t\t@include triangle_narrow(bottom,$white,.8rem);\r\n\r\n\t\t.dropdown_container.opened_mod & {\r\n\t\t\tmargin-top:-.8rem;\r\n\r\n\t\t\t@include triangle_narrow(top,$white,.8rem);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n.dropdown_content {\r\n\tposition: absolute;\r\n\tz-index: 10;\r\n\tmin-width: 20rem;\r\n\tbackground: $white;\r\n\tborder: 1px solid $brand_default_color;\r\n\tborder-radius: .3rem;\r\n\toverflow: hidden;\r\n\topacity: 0;\r\n\tpointer-events: none;\r\n\ttransition:.3s ease;\r\n\r\n\t&.down_left_mod {\r\n\t\tleft: 0;\r\n\t\ttop: calc(100% + .5rem);\r\n\t\ttransform:translate(0,-1rem);\r\n\t}\r\n\r\n\t&.down_right_mod {\r\n\t\tright: 0;\r\n\t\ttop: calc(100% + .5rem);\r\n\t\ttransform:translate(0,-1rem);\r\n\t}\r\n\r\n\t&.up_left_mod {\r\n\t\tleft: 0;\r\n\t\tbottom: calc(100% + .5rem);\r\n\t\ttransform:translate(0,-1rem);\r\n\t}\r\n\r\n\t&.up_right_mod {\r\n\t\tright: 0;\r\n\t\tbottom: calc(100% + .5rem);\r\n\t\ttransform:translate(0,-1rem);\r\n\t}\r\n\r\n\t.dropdown_container.opened_mod & {\r\n\t\ttransform:translate(0,0);\r\n\t\topacity: 1;\r\n\t\tpointer-events: auto;\r\n\t}\r\n}\r\n\r\n.dropdown_link {\r\n\tdisplay: block;\r\n\tpadding:.5rem 2rem;\r\n\tcolor:$brand_default_color;\r\n\ttransition:.3s;\r\n\r\n\t&:hover {\r\n\t\tbackground: $brand_default_color;\r\n\t\tcolor:$white;\r\n\t}\r\n\r\n\t&:hover, &:focus {\r\n\t\ttext-decoration: none;\r\n\t}\r\n}\r\n\r\n.test_container {\r\n\t&.center_mod {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items:center;\r\n\t}\r\n}","syntax":"scss","file":"_dropdowns.scss","markupJade":".test_container.center_mod\n .dropdown_container.dropdownContainer\n  a.dropdown_trigger.dropdownTrigger(href=\"#\") Home\n  .dropdown_content(class=\"{$modifiers}\")\n   ul.dropdown_list\n    li.dropdown_item\n     a.dropdown_link(href=\"#\") Lorem\n    li.dropdown_item\n     a.dropdown_link(href=\"#\") Ipsum\n    li.dropdown_item\n     a.dropdown_link(href=\"#\") Dolor","wrapper":"<sg-wrapper-content/>","renderMarkup":"\n<div class=\"test_container center_mod\">\n  <div class=\"dropdown_container dropdownContainer\"><a href=\"#\" class=\"dropdown_trigger dropdownTrigger\">Home</a>\n    <div class=\"dropdown_content {$modifiers}\">\n      <ul class=\"dropdown_list\">\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Lorem</a></li>\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Ipsum</a></li>\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Dolor</a></li>\n      </ul>\n    </div>\n  </div>\n</div>","variables":["side","color","size","side","narrow_size","size","color","side","narrow_size","size","color","side","narrow_size","size","color","side","narrow_size","size","color","white","brand_default_color","white","white","white","brand_default_color","brand_default_color","brand_default_color","white"],"fileHash":"0301e14dcc9099ed9a9d2f5c03339664"},{"header":"Pagination","description":"<p class=\"sg\">We use jade mixin for generating pagination. You can find markup and styles for pagination in <b>helpers/components/pagination</b> folder.</p>\n","modifiers":[],"deprecated":false,"experimental":false,"reference":"5","markup":"\n<div class=\"pag_block\">\n  <ul class=\"pag_list\">\n    <li class=\"pag_item prev_mod\"><a href=\"#\" class=\"pag_link prev_mod\"></a></li>\n    <li class=\"pag_item\"><a title=\"1\" class=\"pag_link active_mod\">1</a></li>\n    <li class=\"pag_item\"><a href=\"#\" title=\"2\" class=\"pag_link\">2</a></li>\n    <li class=\"pag_item\"><a href=\"#\" title=\"3\" class=\"pag_link\">3</a></li>\n    <li class=\"pag_item\"><a class=\"pag_link dots_mod\">&hellip;</a></li>\n    <li class=\"pag_item\"><a href=\"#\" title=\"4\" class=\"pag_link\">4</a></li>\n    <li class=\"pag_item\"><a href=\"#\" title=\"5\" class=\"pag_link\">5</a></li>\n    <li class=\"pag_item next_mod\"><a href=\"#\" class=\"pag_link next_mod\"></a></li>\n  </ul>\n</div>","css":"// variables\r\n$white:#fff;\r\n$black:#000;\r\n$brand_default_color: #3498db;\r\n\r\n// mixins\r\n@mixin arrow($direction,$color:#000,$width:1rem,$arrow_width:.1rem) {\r\n\twidth:$width;\r\n\theight:$width;\r\n\ttransform:rotate(45deg);\r\n\r\n\t@if $direction == right {\r\n\t\tborder-top:$arrow_width solid $color;\r\n\t\tborder-right:$arrow_width solid $color;\r\n\t\tborder-bottom:0;\r\n\t\tborder-left: 0;\r\n\t}\r\n\t@if $direction == bottom {\r\n\t\tborder-right:$arrow_width solid $color;\r\n\t\tborder-bottom:$arrow_width solid $color;\r\n\t\tborder-top: 0;\r\n\t\tborder-left: 0;\r\n\t}\r\n\t@if $direction == left {\r\n\t\tborder-bottom:$arrow_width solid $color;\r\n\t\tborder-left:$arrow_width solid $color;\r\n\t\tborder-top: 0;\r\n\t\tborder-right: 0;\r\n\t}\r\n\t@if $direction == top {\r\n\t\tborder-left:$arrow_width solid $color;\r\n\t\tborder-top:$arrow_width solid $color;\r\n\t\tborder-bottom: 0;\r\n\t\tborder-right: 0;\r\n\t}\r\n}\r\n\r\n\r\n.pag_block {\r\n\tmargin:2rem;\r\n}\r\n\r\n.pag_list {\r\n\tdisplay: flex;\r\n}\r\n\r\n.pag_item {\r\n\tpadding:0 0 0 .5rem;\r\n\r\n\t&:first-child {\r\n\t\tpadding: 0;\r\n\t}\r\n\r\n\t&.next_mod {\r\n\t\tposition: relative;\r\n\t}\r\n}\r\n\r\n.pag_link {\r\n\tdisplay: block;\r\n\theight: 2.8rem;\r\n\tline-height: 2.8rem;\r\n\tpadding:0 1rem;\r\n\tcolor:$brand_default_color;\r\n\tborder:1px solid $brand_default_color;\r\n\tborder-radius: 2px;\r\n\r\n\t&.active_mod,&:hover {\r\n\t\tcolor:$white;\r\n\t\tbackground: $brand_default_color;\r\n\t}\r\n\r\n\t&:hover, &:focus {\r\n\t\ttext-decoration: none;\r\n\t}\r\n\r\n\t&.dots_mod {\r\n\t\tborder:1px solid transparent;\r\n\r\n\t\t&:hover {\r\n\t\t\tcolor: $black;\r\n\t\t\tbackground: $white;\r\n\t\t}\r\n\t}\r\n\r\n\t&.prev_mod,&.next_mod {\r\n\t\tposition: relative;\r\n\r\n\t\t&:before {\r\n\t\t\tcontent: '';\r\n\t\t\tposition: absolute;\r\n\t\t\ttop: 50%;\r\n\t\t\tmargin:(-.5rem) 0 0 0;\r\n\t\t\tdisplay: block;\r\n\t\t}\r\n\t}\r\n\r\n\t&.prev_mod {\r\n\t\t&:before {\r\n\t\t\tleft: .7rem;\r\n\r\n\t\t\t@include arrow(left,$brand_default_color,1rem,.2rem);\r\n\t\t}\r\n\t\t&:hover:before {\r\n\t\t\t@include arrow(left,$white,1rem,.2rem);\r\n\t\t}\r\n\t}\r\n\r\n\t&.next_mod {\r\n\t\t&:before {\r\n\t\t\tright: .7rem;\r\n\r\n\t\t\t@include arrow(right,$brand_default_color,1rem,.2rem);\r\n\t\t}\r\n\t\t&:hover:before {\r\n\t\t\t@include arrow(right,$white,1rem,.2rem);\r\n\t\t}\r\n\t}\r\n}","syntax":"scss","file":"_pagination.scss","markupJade":"mixin pagination(config)\n - config.mod = config.mod || ''\n - config.active = config.active || 1\n .pag_block(class='#{config.mod}')\n  ul.pag_list(class=\"#{config.mod}\")\n   if config.arrows\n    li.pag_item.prev_mod(class=\"#{config.mod}\")\n     a.pag_link.prev_mod(href=\"#\" class=\"#{config.mod}\")\n   - var i = 1;\n   while i <= config.pages\n    if i == config.pages - 1\n     li.pag_item(class=\"#{config.mod}\")\n      a.pag_link.dots_mod(class=\"#{config.mod}\") &hellip;\n     li.pag_item(class=\"#{config.mod}\")\n      a.pag_link(href=\"#\" title=\"#{i}\" class=\"#{config.mod}\") #{i}\n    else if i == config.active\n     li.pag_item(class=\"#{config.mod}\")\n      a.pag_link.active_mod(title=\"#{i}\" class=\"#{config.mod}\") #{i}\n    else\n     li.pag_item(class=\"#{config.mod}\")\n      a.pag_link(href=\"#\" title=\"#{i}\" class=\"#{config.mod}\") #{i}\n    -i++\n   if config.arrows\n    li.pag_item.next_mod\n     a.pag_link.next_mod(href=\"#\" class=\"#{config.mod}\")\n+pagination({\n\tpages:5,\n\tarrows:true\n})","wrapper":"<sg-wrapper-content/>","renderMarkup":"\n<div class=\"pag_block\">\n  <ul class=\"pag_list\">\n    <li class=\"pag_item prev_mod\"><a href=\"#\" class=\"pag_link prev_mod\"></a></li>\n    <li class=\"pag_item\"><a title=\"1\" class=\"pag_link active_mod\">1</a></li>\n    <li class=\"pag_item\"><a href=\"#\" title=\"2\" class=\"pag_link\">2</a></li>\n    <li class=\"pag_item\"><a href=\"#\" title=\"3\" class=\"pag_link\">3</a></li>\n    <li class=\"pag_item\"><a class=\"pag_link dots_mod\">&hellip;</a></li>\n    <li class=\"pag_item\"><a href=\"#\" title=\"4\" class=\"pag_link\">4</a></li>\n    <li class=\"pag_item\"><a href=\"#\" title=\"5\" class=\"pag_link\">5</a></li>\n    <li class=\"pag_item next_mod\"><a href=\"#\" class=\"pag_link next_mod\"></a></li>\n  </ul>\n</div>","variables":["direction","width","width","direction","arrow_width","color","arrow_width","color","direction","arrow_width","color","arrow_width","color","direction","arrow_width","color","arrow_width","color","direction","arrow_width","color","arrow_width","color","brand_default_color","brand_default_color","white","brand_default_color","black","white","brand_default_color","white","brand_default_color","white"],"fileHash":"3c4970cba7434233aee9c4450bf3f774"},{"header":"Breadcrumbs","description":"<p class=\"sg\">We use jade mixin for generating breadcrumbs. You can find markup and styles for pagination in <b>helpers/components/breadcrumbs</b> folder.</p>\n","modifiers":[],"deprecated":false,"experimental":false,"reference":"6","markup":"\n<ul class=\"breadcrumbs_list\">\n  <li class=\"breadcrumbs_item\"><a href=\"#\" class=\"breadcrumbs_link\">Home</a>\n  </li>\n  <li class=\"breadcrumbs_item\"><a href=\"#\" class=\"breadcrumbs_link\">Categories</a>\n  </li>\n  <li class=\"breadcrumbs_item\"><a class=\"breadcrumbs_link current_mod\">Current</a>\n  </li>\n</ul>","css":"// variables\r\n$white:#fff;\r\n$black:#000;\r\n$color_text_base:$black;\r\n\r\n.breadcrumbs_list {\r\n\tdisplay:flex;\r\n\tmargin:50px;\r\n}\r\n\r\n.breadcrumbs_item {\r\n\tpadding:0 0 0 1rem;\r\n\r\n\t&:before {\r\n\t\tcontent: '>';\r\n\t\tdisplay: inline-block;\r\n\t\tmargin:0 1rem 0 0;\r\n\t}\r\n\r\n\t&:first-child {\r\n\t\tpadding: 0;\r\n\r\n\t\t&:before {\r\n\t\t\tdisplay: none;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n.breadcrumbs_link {\r\n\tcolor:$brand_default_color;\r\n\r\n\t&.current_mod {\r\n\t\tcolor:$color_text_base;\r\n\r\n\t\t&:hover, &:focus {\r\n\t\t\ttext-decoration: none;\r\n\t\t}\r\n\t}\r\n}","syntax":"scss","file":"_breadcrumbs.scss","markupJade":"mixin breadcrumbs(array,add_class)\n  - add_class = add_class || ''\n  ul.breadcrumbs_list(class=add_class)\n    each crumb, index in array\n      li.breadcrumbs_item\n        if (index == array.length - 1)\n          a.breadcrumbs_link.current_mod=crumb\n        else\n          a.breadcrumbs_link(href=\"#\")=crumb\n+breadcrumbs(['Home','Categories','Current'])","wrapper":"<sg-wrapper-content/>","renderMarkup":"\n<ul class=\"breadcrumbs_list\">\n  <li class=\"breadcrumbs_item\"><a href=\"#\" class=\"breadcrumbs_link\">Home</a>\n  </li>\n  <li class=\"breadcrumbs_item\"><a href=\"#\" class=\"breadcrumbs_link\">Categories</a>\n  </li>\n  <li class=\"breadcrumbs_item\"><a class=\"breadcrumbs_link current_mod\">Current</a>\n  </li>\n</ul>","variables":["brand_default_color","color_text_base"],"fileHash":"8dc1d597a8bc0699b79621a7f6c89144"}],"variables":[{"name":"narrow_size","value":"$size/2","line":3,"file":"_mixins.scss","fileHash":"57f6737a148ad171eb3667ed9024dd61"},{"name":"white","value":"#fff","line":1,"file":"_variables.scss","fileHash":"8a81a7f5b976f0f02fe257cf1e2afb7d"},{"name":"brand_default_color","value":"#3498db","line":3,"file":"_variables.scss","fileHash":"8a81a7f5b976f0f02fe257cf1e2afb7d"},{"name":"brand_success_color","value":"#2ecc71","line":5,"file":"_variables.scss","fileHash":"8a81a7f5b976f0f02fe257cf1e2afb7d"},{"name":"brand_danger_color","value":"#e74c3c","line":7,"file":"_variables.scss","fileHash":"8a81a7f5b976f0f02fe257cf1e2afb7d"},{"name":"black","value":"#000","line":9,"file":"_variables.scss","fileHash":"8a81a7f5b976f0f02fe257cf1e2afb7d"},{"name":"gl_radius","value":".2rem","line":11,"file":"_variables.scss","fileHash":"8a81a7f5b976f0f02fe257cf1e2afb7d"},{"name":"font_size_base","value":"1.4rem","line":13,"file":"_variables.scss","fileHash":"8a81a7f5b976f0f02fe257cf1e2afb7d"},{"name":"font_1","value":"sans-serif","line":21,"file":"_variables.scss","fileHash":"8a81a7f5b976f0f02fe257cf1e2afb7d"},{"name":"input_height","value":"4rem","line":27,"file":"_variables.scss","fileHash":"8a81a7f5b976f0f02fe257cf1e2afb7d"},{"name":"input_offset","value":"0 1rem","line":29,"file":"_variables.scss","fileHash":"8a81a7f5b976f0f02fe257cf1e2afb7d"},{"name":"input_font_size","value":"$font_size_base","line":31,"file":"_variables.scss","fileHash":"8a81a7f5b976f0f02fe257cf1e2afb7d"},{"name":"input_border_color","value":"gray","line":33,"file":"_variables.scss","fileHash":"8a81a7f5b976f0f02fe257cf1e2afb7d"},{"name":"input_border_color_active","value":"$black","line":35,"file":"_variables.scss","fileHash":"8a81a7f5b976f0f02fe257cf1e2afb7d"},{"name":"input_placeholder_color","value":"#aaa","line":37,"file":"_variables.scss","fileHash":"8a81a7f5b976f0f02fe257cf1e2afb7d"},{"name":"input_text_color","value":"$black","line":39,"file":"_variables.scss","fileHash":"8a81a7f5b976f0f02fe257cf1e2afb7d"},{"name":"input_radius","value":"$gl_radius","line":41,"file":"_variables.scss","fileHash":"8a81a7f5b976f0f02fe257cf1e2afb7d"},{"name":"brand_default_color","value":"#3498db","line":197,"file":"_buttons.scss","fileHash":"ecbb999933b53413af0a34d52f3bbcc7"},{"name":"brand_success_color","value":"#2ecc71","line":199,"file":"_buttons.scss","fileHash":"ecbb999933b53413af0a34d52f3bbcc7"},{"name":"brand_danger_color","value":"#e74c3c","line":201,"file":"_buttons.scss","fileHash":"ecbb999933b53413af0a34d52f3bbcc7"},{"name":"brand_default_color","value":"#3498db","line":379,"file":"_buttons.scss","fileHash":"ecbb999933b53413af0a34d52f3bbcc7"},{"name":"brand_success_color","value":"#2ecc71","line":381,"file":"_buttons.scss","fileHash":"ecbb999933b53413af0a34d52f3bbcc7"},{"name":"brand_danger_color","value":"#e74c3c","line":383,"file":"_buttons.scss","fileHash":"ecbb999933b53413af0a34d52f3bbcc7"},{"name":"brand_default_color","value":"#3498db","line":563,"file":"_buttons.scss","fileHash":"ecbb999933b53413af0a34d52f3bbcc7"},{"name":"brand_success_color","value":"#2ecc71","line":565,"file":"_buttons.scss","fileHash":"ecbb999933b53413af0a34d52f3bbcc7"},{"name":"brand_danger_color","value":"#e74c3c","line":567,"file":"_buttons.scss","fileHash":"ecbb999933b53413af0a34d52f3bbcc7"},{"name":"brand_default_color","value":"#3498db","line":53,"file":"_dropdowns.scss","fileHash":"0301e14dcc9099ed9a9d2f5c03339664"},{"name":"narrow_size","value":"$size/2","line":61,"file":"_dropdowns.scss","fileHash":"0301e14dcc9099ed9a9d2f5c03339664"},{"name":"font_1","value":"sans-serif","line":209,"file":"_forms.scss","fileHash":"59e31a54b3ca396d2ccd5c4df4833b47"},{"name":"input_height","value":"4rem","line":211,"file":"_forms.scss","fileHash":"59e31a54b3ca396d2ccd5c4df4833b47"},{"name":"input_offset","value":"0 1rem","line":213,"file":"_forms.scss","fileHash":"59e31a54b3ca396d2ccd5c4df4833b47"},{"name":"input_font_size","value":"$font_size_base","line":215,"file":"_forms.scss","fileHash":"59e31a54b3ca396d2ccd5c4df4833b47"},{"name":"input_border_color","value":"gray","line":217,"file":"_forms.scss","fileHash":"59e31a54b3ca396d2ccd5c4df4833b47"},{"name":"input_border_color_active","value":"$black","line":219,"file":"_forms.scss","fileHash":"59e31a54b3ca396d2ccd5c4df4833b47"},{"name":"input_placeholder_color","value":"#aaa","line":221,"file":"_forms.scss","fileHash":"59e31a54b3ca396d2ccd5c4df4833b47"},{"name":"input_text_color","value":"$black","line":223,"file":"_forms.scss","fileHash":"59e31a54b3ca396d2ccd5c4df4833b47"},{"name":"input_radius","value":"$gl_radius","line":225,"file":"_forms.scss","fileHash":"59e31a54b3ca396d2ccd5c4df4833b47"},{"name":"font_1","value":"sans-serif","line":641,"file":"_forms.scss","fileHash":"59e31a54b3ca396d2ccd5c4df4833b47"},{"name":"input_height","value":"4rem","line":643,"file":"_forms.scss","fileHash":"59e31a54b3ca396d2ccd5c4df4833b47"},{"name":"input_offset","value":"0 1rem","line":645,"file":"_forms.scss","fileHash":"59e31a54b3ca396d2ccd5c4df4833b47"},{"name":"input_font_size","value":"$font_size_base","line":647,"file":"_forms.scss","fileHash":"59e31a54b3ca396d2ccd5c4df4833b47"},{"name":"input_border_color","value":"gray","line":649,"file":"_forms.scss","fileHash":"59e31a54b3ca396d2ccd5c4df4833b47"},{"name":"input_border_color_active","value":"$black","line":651,"file":"_forms.scss","fileHash":"59e31a54b3ca396d2ccd5c4df4833b47"},{"name":"input_placeholder_color","value":"#aaa","line":653,"file":"_forms.scss","fileHash":"59e31a54b3ca396d2ccd5c4df4833b47"},{"name":"input_text_color","value":"$black","line":655,"file":"_forms.scss","fileHash":"59e31a54b3ca396d2ccd5c4df4833b47"},{"name":"input_radius","value":"$gl_radius","line":657,"file":"_forms.scss","fileHash":"59e31a54b3ca396d2ccd5c4df4833b47"},{"name":"brand_default_color","value":"#3498db","line":997,"file":"_forms.scss","fileHash":"59e31a54b3ca396d2ccd5c4df4833b47"},{"name":"brand_default_color","value":"#3498db","line":1263,"file":"_forms.scss","fileHash":"59e31a54b3ca396d2ccd5c4df4833b47"},{"name":"brand_default_color","value":"#3498db","line":81,"file":"_pagination.scss","fileHash":"3c4970cba7434233aee9c4450bf3f774"},{"name":"prefix-for-webkit","value":"true !default","line":1,"file":"main_global.scss","fileHash":"f270a7110402112e25e184721cfb6f9b"},{"name":"prefix-for-mozilla","value":"false !default","line":3,"file":"main_global.scss","fileHash":"f270a7110402112e25e184721cfb6f9b"},{"name":"prefix-for-microsoft","value":"true !default","line":5,"file":"main_global.scss","fileHash":"f270a7110402112e25e184721cfb6f9b"},{"name":"prefix-for-opera","value":"false !default","line":7,"file":"main_global.scss","fileHash":"f270a7110402112e25e184721cfb6f9b"},{"name":"prefix-for-spec","value":"true !default","line":9,"file":"main_global.scss","fileHash":"f270a7110402112e25e184721cfb6f9b"}],"section":[{"header":"Buttons","description":"<p class=\"sg\">We use sass @extend function to create buttons. All button&apos;s styles are separated to sizes and colors.\nYou should write these extends in <b>assets/sass/helpers/_buttons_extends.scss</b> file</p>\n","modifiers":[],"deprecated":false,"experimental":false,"reference":"1","markup":null,"syntax":"scss","file":"_buttons.scss","wrapper":"<sg-wrapper-content/>","fileHash":"ecbb999933b53413af0a34d52f3bbcc7"},{"header":"Default button","description":"<p class=\"sg\">Each button has own class and optional additional class.\nWe use sass @extend function to create buttons. All button&apos;s styles are separated to sizes and colors\nYou should write these extends in <b>assets/sass/helpers/_buttons_extends.scss</b> file</p>\n","modifiers":[{"id":1,"name":".big_mod","description":"Big button","className":"big_mod","markup":"<a href=\"#\" class=\"btn_default {$modifiers}\">Button</a>","markupJade":"a.btn_default(href=\"#\" class=\"{$modifiers}\") Button","renderMarkup":"<a href=\"#\" class=\"btn_default {$modifiers}\">Button</a>"},{"id":2,"name":".standart_mod","description":"Standart-size button","className":"standart_mod","markup":"<a href=\"#\" class=\"btn_default {$modifiers}\">Button</a>","markupJade":"a.btn_default(href=\"#\" class=\"{$modifiers}\") Button","renderMarkup":"<a href=\"#\" class=\"btn_default {$modifiers}\">Button</a>"},{"id":3,"name":".small_mod","description":"Small button","className":"small_mod","markup":"<a href=\"#\" class=\"btn_default {$modifiers}\">Button</a>","markupJade":"a.btn_default(href=\"#\" class=\"{$modifiers}\") Button","renderMarkup":"<a href=\"#\" class=\"btn_default {$modifiers}\">Button</a>"}],"deprecated":false,"experimental":false,"reference":"1.1","markup":"<a href=\"#\" class=\"btn_default {$modifiers}\">Button</a>","css":"// variables\r\n$white:#fff;\r\n$brand_default_color: #3498db;\r\n$brand_success_color: #2ecc71;\r\n$brand_danger_color: #e74c3c;\r\n\r\n//common styles for buttons\r\n@mixin button() {\r\n\tdisplay: inline-block;\r\n\ttext-decoration: none;\r\n\ttext-align: center;\r\n\tfont-family:sans-serif;\r\n\r\n\t&:hover, &:focus {\r\n\t\ttext-decoration: none;\r\n\t}\r\n}\r\n\r\n// color types\r\n%button_default {\r\n\tcolor:$white;\r\n\tbackground: $brand_default_color;\r\n\ttransition:background .3s ease;\r\n\r\n\t&:hover {\r\n\t\tbackground:darken($brand_default_color,5%);\r\n\t}\r\n}\r\n\r\n// size types\r\n%button_big {\r\n\theight: 5rem;\r\n\tpadding:0 3rem;\r\n\tline-height: 5rem;\r\n\tfont-size: 2rem;\r\n\tborder-radius:8px;\r\n\r\n\t@include button();\r\n}\r\n\r\n%button_standart {\r\n\theight: 3.6rem;\r\n\tpadding:0 2rem;\r\n\tfont-size: 1.6rem;\r\n\tline-height: 3.6rem;\r\n\tborder-radius: 6px;\r\n\r\n\t@include button();\r\n}\r\n\r\n%button_small {\r\n\theight: 2.4rem;\r\n\tpadding:0 1rem;\r\n\tfont-size: 1.3rem;\r\n\tline-height: 2.4rem;\r\n\tborder-radius: 4px;\r\n\r\n\t@include button();\r\n}\r\n\r\n.btn_default {\r\n\t@extend %button_default;\r\n\r\n\t&.big_mod {\r\n\t\t@extend %button_big;\r\n\t}\r\n\r\n\t&.standart_mod {\r\n\t\t@extend %button_standart;\r\n\t}\r\n\r\n\t&.small_mod {\r\n\t\t@extend %button_small;\r\n\t}\r\n}","syntax":"scss","file":"_buttons.scss","markupJade":"a.btn_default(href=\"#\" class=\"{$modifiers}\") Button","parentReference":"1","wrapper":"<sg-wrapper-content/>","renderMarkup":"<a href=\"#\" class=\"btn_default {$modifiers}\">Button</a>","variables":["white","brand_default_color","brand_default_color"],"fileHash":"ecbb999933b53413af0a34d52f3bbcc7"},{"header":"Success button","description":"<p class=\"sg\">Each button has own class and optional additional class.\nWe use sass @extend function to create buttons. All button&apos;s styles are separated to sizes and colors\nYou should write these extends in <b>assets/sass/helpers/_buttons_extends.scss</b> file</p>\n","modifiers":[{"id":1,"name":".big_mod","description":"Big button","className":"big_mod","markup":"<a href=\"#\" class=\"btn_success {$modifiers}\">Button</a>","markupJade":"a.btn_success(href=\"#\" class=\"{$modifiers}\") Button","renderMarkup":"<a href=\"#\" class=\"btn_success {$modifiers}\">Button</a>"},{"id":2,"name":".standart_mod","description":"Standart-size button","className":"standart_mod","markup":"<a href=\"#\" class=\"btn_success {$modifiers}\">Button</a>","markupJade":"a.btn_success(href=\"#\" class=\"{$modifiers}\") Button","renderMarkup":"<a href=\"#\" class=\"btn_success {$modifiers}\">Button</a>"},{"id":3,"name":".small_mod","description":"Small button","className":"small_mod","markup":"<a href=\"#\" class=\"btn_success {$modifiers}\">Button</a>","markupJade":"a.btn_success(href=\"#\" class=\"{$modifiers}\") Button","renderMarkup":"<a href=\"#\" class=\"btn_success {$modifiers}\">Button</a>"}],"deprecated":false,"experimental":false,"reference":"1.2","markup":"<a href=\"#\" class=\"btn_success {$modifiers}\">Button</a>","css":"// variables\r\n$white:#fff;\r\n$brand_default_color: #3498db;\r\n$brand_success_color: #2ecc71;\r\n$brand_danger_color: #e74c3c;\r\n\r\n//common styles for buttons\r\n@mixin button() {\r\n\tdisplay: inline-block;\r\n\ttext-decoration: none;\r\n\ttext-align: center;\r\n\tfont-family:sans-serif;\r\n\r\n\t&:hover, &:focus {\r\n\t\ttext-decoration: none;\r\n\t}\r\n}\r\n\r\n// color types\r\n%button_success {\r\n\tcolor:$white;\r\n\tbackground: $brand_success_color;\r\n\ttransition:background .3s ease;\r\n\r\n\t&:hover {\r\n\t\tbackground:darken($brand_success_color,5%);\r\n\t}\r\n}\r\n\r\n\r\n// size types\r\n%button_big {\r\n\theight: 5rem;\r\n\tpadding:0 3rem;\r\n\tline-height: 5rem;\r\n\tfont-size: 2rem;\r\n\tborder-radius:8px;\r\n\r\n\t@include button();\r\n}\r\n\r\n%button_standart {\r\n\theight: 3.6rem;\r\n\tpadding:0 2rem;\r\n\tfont-size: 1.6rem;\r\n\tline-height: 3.6rem;\r\n\tborder-radius: 6px;\r\n\r\n\t@include button();\r\n}\r\n\r\n%button_small {\r\n\theight: 2.4rem;\r\n\tpadding:0 1rem;\r\n\tfont-size: 1.3rem;\r\n\tline-height: 2.4rem;\r\n\tborder-radius: 4px;\r\n\r\n\t@include button();\r\n}\r\n\r\n.btn_success {\r\n\t@extend %button_success;\r\n\r\n\t&.big_mod {\r\n\t\t@extend %button_big;\r\n\t}\r\n\r\n\t&.standart_mod {\r\n\t\t@extend %button_standart;\r\n\t}\r\n\r\n\t&.small_mod {\r\n\t\t@extend %button_small;\r\n\t}\r\n}","syntax":"scss","file":"_buttons.scss","markupJade":"a.btn_success(href=\"#\" class=\"{$modifiers}\") Button","parentReference":"1","wrapper":"<sg-wrapper-content/>","renderMarkup":"<a href=\"#\" class=\"btn_success {$modifiers}\">Button</a>","variables":["white","brand_success_color","brand_success_color"],"fileHash":"ecbb999933b53413af0a34d52f3bbcc7"},{"header":"Danger button","description":"<p class=\"sg\">Each button has own class and optional additional class.\nWe use sass @extend function to create buttons. All button&apos;s styles are separated to sizes and colors\nYou should write these extends in <b>assets/sass/helpers/_buttons_extends.scss</b> file</p>\n","modifiers":[{"id":1,"name":".big_mod","description":"Big button","className":"big_mod","markup":"<a href=\"#\" class=\"btn_danger {$modifiers}\">Button</a>","markupJade":"a.btn_danger(href=\"#\" class=\"{$modifiers}\") Button","renderMarkup":"<a href=\"#\" class=\"btn_danger {$modifiers}\">Button</a>"},{"id":2,"name":".standart_mod","description":"Standart-size button","className":"standart_mod","markup":"<a href=\"#\" class=\"btn_danger {$modifiers}\">Button</a>","markupJade":"a.btn_danger(href=\"#\" class=\"{$modifiers}\") Button","renderMarkup":"<a href=\"#\" class=\"btn_danger {$modifiers}\">Button</a>"},{"id":3,"name":".small_mod","description":"Small button","className":"small_mod","markup":"<a href=\"#\" class=\"btn_danger {$modifiers}\">Button</a>","markupJade":"a.btn_danger(href=\"#\" class=\"{$modifiers}\") Button","renderMarkup":"<a href=\"#\" class=\"btn_danger {$modifiers}\">Button</a>"}],"deprecated":false,"experimental":false,"reference":"1.3","markup":"<a href=\"#\" class=\"btn_danger {$modifiers}\">Button</a>","css":"// variables\r\n$white:#fff;\r\n$brand_default_color: #3498db;\r\n$brand_success_color: #2ecc71;\r\n$brand_danger_color: #e74c3c;\r\n\r\n//common styles for buttons\r\n@mixin button() {\r\n\tdisplay: inline-block;\r\n\ttext-decoration: none;\r\n\ttext-align: center;\r\n\tfont-family:sans-serif;\r\n\r\n\t&:hover, &:focus {\r\n\t\ttext-decoration: none;\r\n\t}\r\n}\r\n\r\n// color types\r\n%button_danger {\r\n\tcolor:$white;\r\n\tbackground: $brand_danger_color;\r\n\ttransition:background .3s ease;\r\n\r\n\t&:hover {\r\n\t\tbackground:darken($brand_danger_color,5%);\r\n\t}\r\n}\r\n\r\n// size types\r\n%button_big {\r\n\theight: 5rem;\r\n\tpadding:0 3rem;\r\n\tline-height: 5rem;\r\n\tfont-size: 2rem;\r\n\tborder-radius:8px;\r\n\r\n\t@include button();\r\n}\r\n\r\n%button_standart {\r\n\theight: 3.6rem;\r\n\tpadding:0 2rem;\r\n\tfont-size: 1.6rem;\r\n\tline-height: 3.6rem;\r\n\tborder-radius: 6px;\r\n\r\n\t@include button();\r\n}\r\n\r\n%button_small {\r\n\theight: 2.4rem;\r\n\tpadding:0 1rem;\r\n\tfont-size: 1.3rem;\r\n\tline-height: 2.4rem;\r\n\tborder-radius: 4px;\r\n\r\n\t@include button();\r\n}\r\n\r\n.btn_danger {\r\n\t@extend %button_danger;\r\n\r\n\t&.big_mod {\r\n\t\t@extend %button_big;\r\n\t}\r\n\r\n\t&.standart_mod {\r\n\t\t@extend %button_standart;\r\n\t}\r\n\r\n\t&.small_mod {\r\n\t\t@extend %button_small;\r\n\t}\r\n}","syntax":"scss","file":"_buttons.scss","markupJade":"a.btn_danger(href=\"#\" class=\"{$modifiers}\") Button","parentReference":"1","wrapper":"<sg-wrapper-content/>","renderMarkup":"<a href=\"#\" class=\"btn_danger {$modifiers}\">Button</a>","variables":["white","brand_danger_color","brand_danger_color"],"fileHash":"ecbb999933b53413af0a34d52f3bbcc7"},{"header":"Form elements","description":"<p class=\"sg\">We use jade mixins for the form elements. You can find examples of mixins, arrays and styles for it in the <b>helpers/components/forms</b> folder.</p>\n","modifiers":[],"deprecated":false,"experimental":false,"reference":"2","markup":null,"syntax":"scss","file":"_forms.scss","wrapper":"<sg-wrapper-content/>","fileHash":"59e31a54b3ca396d2ccd5c4df4833b47"},{"header":"Text input","description":"<p class=\"sg\">Input type text with dl structure. In jade we define arrays with classes for input, mixin(form_element) and then invoke it. You should create all styles for the form elements in <b>assets/sass/_forms.scss</b> file.</p>\n","modifiers":[],"deprecated":false,"experimental":false,"reference":"2.1","markup":"\n<dl class=\"form_cell form_cell_v1_mod\">\n  <dt class=\"form_cell_title form_v1_mod\">\n    <label for=\"text_1\">Input with title</label>\n  </dt>\n  <dd class=\"form_field_wrap form_v1_mod\">\n    <input type=\"text\" id=\"text_1\" placeholder=\"Placeholder text\" class=\"form_field default_mod \">\n  </dd>\n</dl>\n<dl class=\"form_cell form_cell_v2_mod\">\n  <dt class=\"form_cell_title form_v2_mod\">\n    <label for=\"text_2\">Input with horizontal layout</label>\n  </dt>\n  <dd class=\"form_field_wrap form_v2_mod\">\n    <input type=\"text\" id=\"text_2\" placeholder=\"Placeholder text\" class=\"form_field default_mod \">\n  </dd>\n</dl>\n<dl class=\"form_cell form_cell_v1_mod\">\n  <dt class=\"form_cell_title form_v1_mod hline_hide_mod\">\n    <label for=\"text_3\">Input without title</label>\n  </dt>\n  <dd class=\"form_field_wrap form_v1_mod hline_hide_mod\">\n    <input type=\"text\" id=\"text_3\" placeholder=\"Input without title\" class=\"form_field default_mod \">\n  </dd>\n</dl>\n<dl class=\"form_cell form_cell_v1_mod\">\n  <dt class=\"form_cell_title form_v1_mod hline_hide_mod\">\n    <label for=\"text_4\">Input with icon</label>\n  </dt>\n  <dd class=\"form_field_wrap form_v1_mod hline_hide_mod\">\n    <input type=\"text\" id=\"text_4\" placeholder=\"With right icon\" class=\"form_field default_mod right_icon_mod\"><a href=\"#\" class=\"input_icon right_mod search_mod\">search</a>\n  </dd>\n</dl>\n<dl class=\"form_cell form_cell_v1_mod\">\n  <dt class=\"form_cell_title form_v1_mod hline_hide_mod\">\n    <label for=\"text_5\">Input with icon</label>\n  </dt>\n  <dd class=\"form_field_wrap form_v1_mod hline_hide_mod\">\n    <input type=\"text\" id=\"text_5\" placeholder=\"With left icon\" class=\"form_field default_mod left_icon_mod\"><a href=\"#\" class=\"input_icon left_mod search_mod\">search</a>\n  </dd>\n</dl>","css":"// variables\r\n$font_1: sans-serif;\r\n$input_height: 4rem;\r\n$input_offset: 0 1rem;\r\n$input_font_size: $font_size_base;\r\n$input_border_color: gray;\r\n$input_border_color_active: $black;\r\n$input_placeholder_color: #aaa;\r\n$input_text_color: $black;\r\n$input_radius: $gl_radius;\r\n\r\n%form_field_default {\r\n\tdisplay: block;\r\n\twidth: 100%;\r\n\theight: $input_height;\r\n\tpadding: $input_offset;\r\n\tfont-size: $input_font_size;\r\n\tfont-family: $font_1;\r\n\tcolor: $input_text_color;\r\n\tborder:none;\r\n\tborder-radius: $input_radius;\r\n\tbox-shadow: 0 0 0 1px $input_border_color;\r\n\r\n\t&::-webkit-input-placeholder {\r\n\t\tcolor: $input_placeholder_color;\r\n\t}\r\n\r\n\t&::-moz-placeholder {\r\n\t\tcolor: $input_placeholder_color;\r\n\t}\r\n\t&:-ms-input-placeholder {\r\n\t\tcolor: $input_placeholder_color;\r\n\t}\r\n\r\n\t&.right_icon_mod {\r\n\t\tpadding-right: 4rem;\r\n\t}\r\n\r\n\t&.left_icon_mod {\r\n\t\tpadding-left: 4rem;\r\n\t}\r\n}\r\n\r\n%form_field_default_hover {\r\n}\r\n\r\n%form_field_default_active {\r\n\tbox-shadow: 0 0 0 1px $input_border_color_active;\r\n\r\n\t&::-webkit-input-placeholder {\r\n\t\tcolor: transparent;\r\n\t}\r\n\r\n\t&::-moz-placeholder {\r\n\t\tcolor: transparent;\r\n\t}\r\n\t&:-ms-input-placeholder {\r\n\t\tcolor: transparent;\r\n\t}\r\n}\r\n\r\n.form_cell {\r\n\t&.hidden_field {\r\n\t\tdisplay: none;\r\n\t}\r\n\r\n\t&.form_cell_v1_mod {\r\n\t\twidth: 50%;\r\n\t\tmin-width: 24rem;\r\n\t\tmargin: 3rem 0 0;\r\n\r\n\t\t&:first-child {\r\n\t\t\tmargin: 0;\r\n\t\t}\r\n\t}\r\n\r\n\t&.form_cell_v2_mod {\r\n\t\tdisplay:flex;\r\n\t\talign-items:center;\r\n\t\twidth: 50%;\r\n\t\tmin-width: 34rem;\r\n\t\tmargin: 3rem 0 0;\r\n\r\n\t\t&:first-child {\r\n\t\t\tmargin: 0;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n.form_cell_title {\r\n\r\n\t&.hline_hide_mod {\r\n\t\tdisplay: none;\r\n\t}\r\n\t&.form_v1_mod {\r\n\t\tmargin: 0 0 .4rem;\r\n\t}\r\n\t&.form_v2_mod {\r\n\t\tmargin: 0 1rem 0 0;\r\n\t\tflex:0 0 auto;\r\n\t}\r\n}\r\n\r\n.form_field_wrap {\r\n\tposition: relative;\r\n\r\n\t&.form_v2_mod {\r\n\t\tflex:1 1 auto;\r\n\t}\r\n}\r\n\r\n.form_field:not(.select_rediz_coosen) {\r\n\t&.default_mod {\r\n\t\t@extend %form_field_default;\r\n\r\n\t\t&:focus {\r\n\t\t\t@extend %form_field_default_active;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n.input_icon {\r\n\tposition: absolute;\r\n\tfont-size: 0;\r\n\ttop: 50%;\r\n\twidth: 2rem;\r\n\theight: 2rem;\r\n\tmargin-top: -1rem;\r\n\r\n\t&.right_mod {\r\n\t\tright: 1rem;\r\n\t}\r\n\r\n\t&.left_mod {\r\n\t\tleft: 1rem;\r\n\t}\r\n\r\n\t&.search_mod {\r\n\t\tbackground: url(../i/icons/search.svg);\r\n\t\tbackground-size:100% 100%;\r\n\t}\r\n}","syntax":"scss","file":"_forms.scss","markupJade":"//- arrays for form elements\n- var default_field = {block_class_mod:'form_cell_v1_mod',class_mod:'form_v1_mod', elem_class:'default_mod'}\n- var default_field_hidden = {block_class_mod:'form_cell_v1_mod',class_mod:'form_v1_mod hline_hide_mod', elem_class:'default_mod'}\n- var second_field = {block_class_mod:'form_cell_v2_mod',class_mod:'form_v2_mod', elem_class:'default_mod'}\n//- mixin for form elements\nmixin form_element(config)\n //- default values\n - config.class_array = config.class_array || {}\n - config.class_array.block_class_mod = config.class_array.block_class_mod || ''\n - config.class_array.class_mod = config.class_array.class_mod || ''\n - config.class_array.elem_class = config.class_array.elem_class || ''\n - config.add_class = config.add_class || ''\n - config.placeholder = config.placeholder || ''\n if !config.id\n  - config.id = config.title.replace(/\\s/g, '_').replace(/[.,:;(){}/?!@#$%&*]/g, '')\n else\n  - config.id = config.id.replace(/\\s/g, '_').replace(/[.,:;(){}/?!@#$%&*]/g, '')\n if config.type === 'text' || config.type === 'password' || config.type === 'email' || config.type === 'tel' || config.type === 'textarea' || config.type === 'select' || config.type === 'file'\n  dl.form_cell(class=config.class_array.block_class_mod)\n   dt.form_cell_title(class=config.class_array.class_mod)\n    label(for=config.id) #{config.title}\n   dd.form_field_wrap(class=config.class_array.class_mod)\n    if config.type === 'text' || config.type === 'password' || config.type === 'email' || config.type === 'tel'\n     if config.value\n      input.form_field(value=config.value type=config.type id=config.id class='#{config.class_array.elem_class} #{config.add_class}' placeholder=config.placeholder)\n      block\n     else\n      input.form_field(type=config.type id=config.id class='#{config.class_array.elem_class} #{config.add_class}' placeholder=config.placeholder)\n      block\n    if config.type === 'textarea'\n     textarea.form_field(id=config.id class='#{config.class_array.elem_class} #{config.add_class}' placeholder=config.placeholder) #{config.value}\n     block\n    if config.type === 'file'\n     input.form_field(type=config.type id=config.id class='#{config.class_array.elem_class} #{config.add_class}' placeholder=config.placeholder)\n     .form_field_file_field\n      span.form_field_file_text #{config.title}\n      span.form_field_file_butt Choose File\n    if config.type === 'select'\n     select.form_field(id=config.id class='#{config.class_array.elem_class} #{config.add_class}' data-placeholder=config.placeholder)\n      each option in config.options\n       option(value=option)= option\n     block\n if config.type === 'checkbox' || config.type === 'radio'\n  label.radio_check(class=config.class_array.block_class_mod)\n   if config.checked\n    input.radio_check_input(name=config.name type=config.type class='#{config.class_array.elem_class} #{config.add_class}' checked='checked')\n   else\n    input.radio_check_input(name=config.name type=config.type class='#{config.class_array.elem_class} #{config.add_class}')\n   span.radio_check_text(class=config.class_array.class_mod) #{config.title}\n//- create text input\n+form_element({\n\ttype: 'text',\n\tclass_array: default_field,\n\ttitle: 'Input with title',\n\tid: 'text_1',\n\tplaceholder: 'Placeholder text'\n})\n+form_element({\n\ttype: 'text',\n\tclass_array: second_field,\n\ttitle: 'Input with horizontal layout',\n\tid: 'text_2',\n\tplaceholder: 'Placeholder text'\n})\n+form_element({\n\ttype: 'text',\n\tclass_array: default_field_hidden,\n\ttitle: 'Input without title',\n\tid: 'text_3',\n\tplaceholder: 'Input without title'\n})\n+form_element({\n\ttype: 'text',\n\tclass_array: default_field_hidden,\n\ttitle: 'Input with icon',\n\tid: 'text_4',\n\tplaceholder: 'With right icon',\n\tadd_class: 'right_icon_mod'\n})\n a.input_icon.right_mod.search_mod(href=\"#\") search\n+form_element({\n\ttype: 'text',\n\tclass_array: default_field_hidden,\n\ttitle: 'Input with icon',\n\tid: 'text_5',\n\tplaceholder: 'With left icon',\n\tadd_class: 'left_icon_mod'\n})\n a.input_icon.left_mod.search_mod(href=\"#\") search","parentReference":"2","wrapper":"<sg-wrapper-content/>","renderMarkup":"\n<dl class=\"form_cell form_cell_v1_mod\">\n  <dt class=\"form_cell_title form_v1_mod\">\n    <label for=\"text_1\">Input with title</label>\n  </dt>\n  <dd class=\"form_field_wrap form_v1_mod\">\n    <input type=\"text\" id=\"text_1\" placeholder=\"Placeholder text\" class=\"form_field default_mod \">\n  </dd>\n</dl>\n<dl class=\"form_cell form_cell_v2_mod\">\n  <dt class=\"form_cell_title form_v2_mod\">\n    <label for=\"text_2\">Input with horizontal layout</label>\n  </dt>\n  <dd class=\"form_field_wrap form_v2_mod\">\n    <input type=\"text\" id=\"text_2\" placeholder=\"Placeholder text\" class=\"form_field default_mod \">\n  </dd>\n</dl>\n<dl class=\"form_cell form_cell_v1_mod\">\n  <dt class=\"form_cell_title form_v1_mod hline_hide_mod\">\n    <label for=\"text_3\">Input without title</label>\n  </dt>\n  <dd class=\"form_field_wrap form_v1_mod hline_hide_mod\">\n    <input type=\"text\" id=\"text_3\" placeholder=\"Input without title\" class=\"form_field default_mod \">\n  </dd>\n</dl>\n<dl class=\"form_cell form_cell_v1_mod\">\n  <dt class=\"form_cell_title form_v1_mod hline_hide_mod\">\n    <label for=\"text_4\">Input with icon</label>\n  </dt>\n  <dd class=\"form_field_wrap form_v1_mod hline_hide_mod\">\n    <input type=\"text\" id=\"text_4\" placeholder=\"With right icon\" class=\"form_field default_mod right_icon_mod\"><a href=\"#\" class=\"input_icon right_mod search_mod\">search</a>\n  </dd>\n</dl>\n<dl class=\"form_cell form_cell_v1_mod\">\n  <dt class=\"form_cell_title form_v1_mod hline_hide_mod\">\n    <label for=\"text_5\">Input with icon</label>\n  </dt>\n  <dd class=\"form_field_wrap form_v1_mod hline_hide_mod\">\n    <input type=\"text\" id=\"text_5\" placeholder=\"With left icon\" class=\"form_field default_mod left_icon_mod\"><a href=\"#\" class=\"input_icon left_mod search_mod\">search</a>\n  </dd>\n</dl>","variables":["input_height","input_offset","input_font_size","font_1","input_text_color","input_radius","input_border_color","input_placeholder_color","input_placeholder_color","input_placeholder_color","input_border_color_active"],"fileHash":"59e31a54b3ca396d2ccd5c4df4833b47"},{"header":"Textarea","description":"<p class=\"sg\">Textarea with dl structure. In jade we define arrays with classes for input, mixin(form_element) and then invoke it. You should create all styles for the form elements in <b>assets/sass/_forms.scss</b> file.</p>\n","modifiers":[],"deprecated":false,"experimental":false,"reference":"2.2","markup":"\n<dl class=\"form_cell form_cell_v1_mod\">\n  <dt class=\"form_cell_title form_v1_mod\">\n    <label for=\"textarea_1\">Textarea with title</label>\n  </dt>\n  <dd class=\"form_field_wrap form_v1_mod\">\n    <textarea id=\"textarea_1\" placeholder=\"Placeholder text\" class=\"form_field default_mod textarea_mod_1\"></textarea>\n  </dd>\n</dl>\n<dl class=\"form_cell form_cell_v1_mod\">\n  <dt class=\"form_cell_title form_v1_mod hline_hide_mod\">\n    <label for=\"textarea_1\">Textarea without title</label>\n  </dt>\n  <dd class=\"form_field_wrap form_v1_mod hline_hide_mod\">\n    <textarea id=\"textarea_1\" placeholder=\"Textarea without title\" class=\"form_field default_mod textarea_mod_1\"></textarea>\n  </dd>\n</dl>","css":"// variables\r\n$font_1: sans-serif;\r\n$input_height: 4rem;\r\n$input_offset: 0 1rem;\r\n$input_font_size: $font_size_base;\r\n$input_border_color: gray;\r\n$input_border_color_active: $black;\r\n$input_placeholder_color: #aaa;\r\n$input_text_color: $black;\r\n$input_radius: $gl_radius;\r\n\r\n%form_field_default {\r\n\tdisplay: block;\r\n\twidth: 100%;\r\n\theight: $input_height;\r\n\tpadding: $input_offset;\r\n\tfont-size: $input_font_size;\r\n\tfont-family: $font_1;\r\n\tcolor: $input_text_color;\r\n\tborder:none;\r\n\tbox-shadow: 0 0 0 1px $input_border_color;\r\n\tborder-radius: $input_radius;\r\n\r\n\t&::-webkit-input-placeholder {\r\n\t\tcolor: $input_placeholder_color;\r\n\t}\r\n\r\n\t&::-moz-placeholder {\r\n\t\tcolor: $input_placeholder_color;\r\n\t}\r\n\t&:-ms-input-placeholder {\r\n\t\tcolor: $input_placeholder_color;\r\n\t}\r\n\r\n\t&.right_icon_mod {\r\n\t\tpadding-right: 4rem;\r\n\t}\r\n\r\n\t&.left_icon_mod {\r\n\t\tpadding-left: 4rem;\r\n\t}\r\n}\r\n\r\n%form_field_default_hover {\r\n}\r\n\r\n%form_field_default_active {\r\n\tbox-shadow: 0 0 0 1px $input_border_color_active;\r\n\t&::-webkit-input-placeholder {\r\n\t\tcolor: transparent;\r\n\t}\r\n\r\n\t&::-moz-placeholder {\r\n\t\tcolor: transparent;\r\n\t}\r\n\t&:-ms-input-placeholder {\r\n\t\tcolor: transparent;\r\n\t}\r\n}\r\n\r\n.form_cell {\r\n\t&.hidden_field {\r\n\t\tdisplay: none;\r\n\t}\r\n\r\n\t&.form_cell_v1_mod {\r\n\t\twidth: 50%;\r\n\t\tmin-width: 24rem;\r\n\t\tmargin: 3rem 0 0;\r\n\r\n\t\t&:first-child {\r\n\t\t\tmargin: 0;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n.form_cell_title {\r\n\r\n\t&.hline_hide_mod {\r\n\t\tdisplay: none;\r\n\t}\r\n\t&.form_v1_mod {\r\n\t\tmargin: 0 0 .4rem;\r\n\t}\r\n}\r\n\r\n.form_field_wrap {\r\n\tposition: relative;\r\n\r\n\t&.form_v1_mod {\r\n\t}\r\n}\r\n\r\n.form_field:not(.select_rediz_coosen) {\r\n\t&.default_mod {\r\n\t\t@extend %form_field_default;\r\n\r\n\t\t&:focus {\r\n\t\t\t@extend %form_field_default_active;\r\n\t\t}\r\n\t}\r\n\t&.textarea_mod_1 {\r\n\t\theight: 20rem;\r\n\t\tpadding:1rem;\r\n\t}\r\n}","syntax":"scss","file":"_forms.scss","markupJade":"//- arrays for form elements\n- var default_field = {block_class_mod:'form_cell_v1_mod',class_mod:'form_v1_mod', elem_class:'default_mod'}\n- var default_field_hidden = {block_class_mod:'form_cell_v1_mod',class_mod:'form_v1_mod hline_hide_mod', elem_class:'default_mod'}\n//- mixin for form elements\nmixin form_element(config)\n //- default values\n - config.class_array = config.class_array || {}\n - config.class_array.block_class_mod = config.class_array.block_class_mod || ''\n - config.class_array.class_mod = config.class_array.class_mod || ''\n - config.class_array.elem_class = config.class_array.elem_class || ''\n - config.add_class = config.add_class || ''\n - config.placeholder = config.placeholder || ''\n if !config.id\n  - config.id = config.title.replace(/\\s/g, '_').replace(/[.,:;(){}/?!@#$%&*]/g, '')\n else\n  - config.id = config.id.replace(/\\s/g, '_').replace(/[.,:;(){}/?!@#$%&*]/g, '')\n if config.type === 'text' || config.type === 'password' || config.type === 'email' || config.type === 'tel' || config.type === 'textarea' || config.type === 'select' || config.type === 'file'\n  dl.form_cell(class=config.class_array.block_class_mod)\n   dt.form_cell_title(class=config.class_array.class_mod)\n    label(for=config.id) #{config.title}\n   dd.form_field_wrap(class=config.class_array.class_mod)\n    if config.type === 'text' || config.type === 'password' || config.type === 'email' || config.type === 'tel'\n     if config.value\n      input.form_field(value=config.value type=config.type id=config.id class='#{config.class_array.elem_class} #{config.add_class}' placeholder=config.placeholder)\n      block\n     else\n      input.form_field(type=config.type id=config.id class='#{config.class_array.elem_class} #{config.add_class}' placeholder=config.placeholder)\n      block\n    if config.type === 'textarea'\n     textarea.form_field(id=config.id class='#{config.class_array.elem_class} #{config.add_class}' placeholder=config.placeholder) #{config.value}\n     block\n    if config.type === 'file'\n     input.form_field(type=config.type id=config.id class='#{config.class_array.elem_class} #{config.add_class}' placeholder=config.placeholder)\n     .form_field_file_field\n      span.form_field_file_text #{config.title}\n      span.form_field_file_butt Choose File\n    if config.type === 'select'\n     select.form_field(id=config.id class='#{config.class_array.elem_class} #{config.add_class}' data-placeholder=config.placeholder)\n      each option in config.options\n       option(value=option)= option\n     block\n if config.type === 'checkbox' || config.type === 'radio'\n  label.radio_check(class=config.class_array.block_class_mod)\n   if config.checked\n    input.radio_check_input(name=config.name type=config.type class='#{config.class_array.elem_class} #{config.add_class}' checked='checked')\n   else\n    input.radio_check_input(name=config.name type=config.type class='#{config.class_array.elem_class} #{config.add_class}')\n   span.radio_check_text(class=config.class_array.class_mod) #{config.title}\n//- create textarea\n+form_element({\n\ttype: 'textarea',\n\tclass_array: default_field,\n\ttitle: 'Textarea with title',\n\tid: 'textarea_1',\n\tplaceholder: 'Placeholder text',\n\tadd_class: 'textarea_mod_1'\n})\n+form_element({\n\ttype: 'textarea',\n\tclass_array: default_field_hidden,\n\ttitle: 'Textarea without title',\n\tid: 'textarea_1',\n\tplaceholder: 'Textarea without title',\n\tadd_class: 'textarea_mod_1'\n})","parentReference":"2","wrapper":"<sg-wrapper-content/>","renderMarkup":"\n<dl class=\"form_cell form_cell_v1_mod\">\n  <dt class=\"form_cell_title form_v1_mod\">\n    <label for=\"textarea_1\">Textarea with title</label>\n  </dt>\n  <dd class=\"form_field_wrap form_v1_mod\">\n    <textarea id=\"textarea_1\" placeholder=\"Placeholder text\" class=\"form_field default_mod textarea_mod_1\"></textarea>\n  </dd>\n</dl>\n<dl class=\"form_cell form_cell_v1_mod\">\n  <dt class=\"form_cell_title form_v1_mod hline_hide_mod\">\n    <label for=\"textarea_1\">Textarea without title</label>\n  </dt>\n  <dd class=\"form_field_wrap form_v1_mod hline_hide_mod\">\n    <textarea id=\"textarea_1\" placeholder=\"Textarea without title\" class=\"form_field default_mod textarea_mod_1\"></textarea>\n  </dd>\n</dl>","variables":["input_height","input_offset","input_font_size","font_1","input_text_color","input_border_color","input_radius","input_placeholder_color","input_placeholder_color","input_placeholder_color","input_border_color_active"],"fileHash":"59e31a54b3ca396d2ccd5c4df4833b47"},{"header":"Checkbox","description":"<p class=\"sg\">Checkbox with custom styling. In jade we define arrays with classes for input, mixin(form_element) and then invoke it. You should create all styles for the form elements in <b>assets/sass/_forms.scss</b> file.</p>\n","modifiers":[],"deprecated":false,"experimental":false,"reference":"2.3","markup":"\n<label class=\"radio_check check_1_mod\">\n  <input name=\"check\" type=\"checkbox\" class=\"radio_check_input check_1_mod \"><span class=\"radio_check_text check_1_mod\">Title of checkbox</span>\n</label>\n<label class=\"radio_check check_1_mod\">\n  <input name=\"check\" type=\"checkbox\" class=\"radio_check_input check_1_mod \"><span class=\"radio_check_text check_1_mod\">Title of checkbox with a very long text and you can paste here any text</span>\n</label>","css":"// variables\r\n$brand_default_color: #3498db;\r\n\r\n.radio_check {\r\n\twidth:50%;\r\n\tmin-width:30rem;\r\n\r\n\tmargin: 2rem 0 0;\r\n\r\n\t&:first-child {\r\n\t\tmargin: 0;\r\n\t}\r\n\r\n\t&.check_1_mod {\r\n\t\tdisplay: inline-block;\r\n\t\tcursor:pointer;\r\n\t}\r\n}\r\n\r\n.radio_check_input {\r\n\t&.check_1_mod {\r\n\t\tdisplay: none;\r\n\t}\r\n}\r\n\r\n.radio_check_text {\r\n\t&.check_1_mod {\r\n\t\tposition: relative;\r\n\t\tdisplay: inline-block;\r\n\t\tpadding:0 0 0 3rem;\r\n\r\n\t\t&:before,&:after {\r\n\t\t\tposition: absolute;\r\n\t\t\ttop: -.2rem;\r\n\t\t\tleft: 0;\r\n\t\t\twidth: 2rem;\r\n\t\t\theight: 2rem;\r\n\t\t\tcursor:pointer;\r\n\t\t}\r\n\r\n\t\t&:before {\r\n\t\t\tcontent: '';\r\n\t\t\tborder-radius:.2rem;\r\n\t\t\tborder:1px solid $brand_default_color;\r\n\t\t}\r\n\r\n\t\t&:after {\r\n\t\t\t@extend %icon-check:before;\r\n\r\n\t\t\ttext-align: center;\r\n\t\t\tline-height: 20px;\r\n\t\t\topacity: 0;\r\n\t\t\tcolor:$brand_default_color;\r\n\t\t\ttransition:opacity .3s ease;\r\n\r\n\t\t\t.radio_check_input:checked + & {\r\n\t\t\t\topacity: 1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","syntax":"scss","file":"_forms.scss","markupJade":"//- arrays for form elements\n- var default_checkbox = {block_class_mod:'check_1_mod',class_mod:'check_1_mod', elem_class:'check_1_mod'}\n- var default_radio = {block_class_mod:'radio_1_mod',class_mod:'radio_1_mod', elem_class:'radio_1_mod'}\n//- mixin for form elements\nmixin form_element(config)\n //- default values\n - config.class_array = config.class_array || {}\n - config.class_array.block_class_mod = config.class_array.block_class_mod || ''\n - config.class_array.class_mod = config.class_array.class_mod || ''\n - config.class_array.elem_class = config.class_array.elem_class || ''\n - config.add_class = config.add_class || ''\n - config.placeholder = config.placeholder || ''\n if !config.id\n  - config.id = config.title.replace(/\\s/g, '_').replace(/[.,:;(){}/?!@#$%&*]/g, '')\n else\n  - config.id = config.id.replace(/\\s/g, '_').replace(/[.,:;(){}/?!@#$%&*]/g, '')\n if config.type === 'text' || config.type === 'password' || config.type === 'email' || config.type === 'tel' || config.type === 'textarea' || config.type === 'select' || config.type === 'file'\n  dl.form_cell(class=config.class_array.block_class_mod)\n   dt.form_cell_title(class=config.class_array.class_mod)\n    label(for=config.id) #{config.title}\n   dd.form_field_wrap(class=config.class_array.class_mod)\n    if config.type === 'text' || config.type === 'password' || config.type === 'email' || config.type === 'tel'\n     if config.value\n      input.form_field(value=config.value type=config.type id=config.id class='#{config.class_array.elem_class} #{config.add_class}' placeholder=config.placeholder)\n      block\n     else\n      input.form_field(type=config.type id=config.id class='#{config.class_array.elem_class} #{config.add_class}' placeholder=config.placeholder)\n      block\n    if config.type === 'textarea'\n     textarea.form_field(id=config.id class='#{config.class_array.elem_class} #{config.add_class}' placeholder=config.placeholder) #{config.value}\n     block\n    if config.type === 'file'\n     input.form_field(type=config.type id=config.id class='#{config.class_array.elem_class} #{config.add_class}' placeholder=config.placeholder)\n     .form_field_file_field\n      span.form_field_file_text #{config.title}\n      span.form_field_file_butt Choose File\n    if config.type === 'select'\n     select.form_field(id=config.id class='#{config.class_array.elem_class} #{config.add_class}' data-placeholder=config.placeholder)\n      each option in config.options\n       option(value=option)= option\n     block\n if config.type === 'checkbox' || config.type === 'radio'\n  label.radio_check(class=config.class_array.block_class_mod)\n   if config.checked\n    input.radio_check_input(name=config.name type=config.type class='#{config.class_array.elem_class} #{config.add_class}' checked='checked')\n   else\n    input.radio_check_input(name=config.name type=config.type class='#{config.class_array.elem_class} #{config.add_class}')\n   span.radio_check_text(class=config.class_array.class_mod) #{config.title}\n//- create checkbox\n+form_element({\n type: 'checkbox',\n class_array: default_checkbox,\n title: 'Title of checkbox',\n name: 'check',\n checked: false\n})\n+form_element({\n type: 'checkbox',\n class_array: default_checkbox,\n title: 'Title of checkbox with a very long text and you can paste here any text',\n name: 'check',\n checked: false\n})","parentReference":"2","wrapper":"<sg-wrapper-content/>","renderMarkup":"\n<label class=\"radio_check check_1_mod\">\n  <input name=\"check\" type=\"checkbox\" class=\"radio_check_input check_1_mod \"><span class=\"radio_check_text check_1_mod\">Title of checkbox</span>\n</label>\n<label class=\"radio_check check_1_mod\">\n  <input name=\"check\" type=\"checkbox\" class=\"radio_check_input check_1_mod \"><span class=\"radio_check_text check_1_mod\">Title of checkbox with a very long text and you can paste here any text</span>\n</label>","variables":["brand_default_color","brand_default_color"],"fileHash":"59e31a54b3ca396d2ccd5c4df4833b47"},{"header":"Radio","description":"<p class=\"sg\">Radio buttons with custom styling. In jade we define arrays with classes for input, mixin(form_element) and then invoke it. You should create all styles for the form elements in <b>assets/sass/_forms.scss</b> file.</p>\n","modifiers":[],"deprecated":false,"experimental":false,"reference":"2.4","markup":"\n<label class=\"radio_check radio_1_mod\">\n  <input name=\"radio\" type=\"radio\" class=\"radio_check_input radio_1_mod \"><span class=\"radio_check_text radio_1_mod\">Title of the radio</span>\n</label>\n<label class=\"radio_check radio_1_mod\">\n  <input name=\"radio\" type=\"radio\" checked=\"checked\" class=\"radio_check_input radio_1_mod \"><span class=\"radio_check_text radio_1_mod\">Title of the radio with a very long text and you can paste here any text</span>\n</label>","css":"// variables\r\n$brand_default_color: #3498db;\r\n\r\n.radio_check {\r\n\twidth:50%;\r\n\tmin-width:30rem;\r\n\r\n\tmargin: 2rem 0 0;\r\n\r\n\t&:first-child {\r\n\t\tmargin: 0;\r\n\t}\r\n\r\n\t&.radio_1_mod {\r\n\t\tdisplay: inline-block;\r\n\t\tcursor:pointer;\r\n\t}\r\n}\r\n\r\n.radio_check_input {\r\n\t&.radio_1_mod {\r\n\t\tdisplay: none;\r\n\t}\r\n}\r\n\r\n.radio_check_text {\r\n\t&.radio_1_mod {\r\n\t\tposition: relative;\r\n\t\tdisplay: inline-block;\r\n\t\tpadding:0 0 0 3rem;\r\n\r\n\t\t&:before {\r\n\t\t\tcontent: '';\r\n\t\t\tposition: absolute;\r\n\t\t\ttop: -.2rem;\r\n\t\t\tleft: 0;\r\n\t\t\twidth: 2rem;\r\n\t\t\theight: 2rem;\r\n\t\t\tborder-radius:100%;\r\n\t\t\tborder:2px solid $brand_default_color;\r\n\t\t\tcursor:pointer;\r\n\t\t}\r\n\r\n\t\t&:after {\r\n\t\t\tcontent:'';\r\n\t\t\tposition: absolute;\r\n\t\t\ttop: .3rem;\r\n\t\t\tleft: .5rem;\r\n\t\t\twidth: 1rem;\r\n\t\t\theight: 1rem;\r\n\t\t\tborder-radius: 100%;\r\n\t\t\tbackground: $brand_default_color;\r\n\t\t\ttransform:scale(0);\r\n\t\t\ttransition:transform .3s ease;\r\n\r\n\t\t\t.radio_check_input:checked + & {\r\n\t\t\t\ttransform:scale(1);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","syntax":"scss","file":"_forms.scss","markupJade":"//- arrays for form elements\n- var default_checkbox = {block_class_mod:'check_1_mod',class_mod:'check_1_mod', elem_class:'check_1_mod'}\n- var default_radio = {block_class_mod:'radio_1_mod',class_mod:'radio_1_mod', elem_class:'radio_1_mod'}\n//- mixin for form elements\nmixin form_element(config)\n //- default values\n - config.class_array = config.class_array || {}\n - config.class_array.block_class_mod = config.class_array.block_class_mod || ''\n - config.class_array.class_mod = config.class_array.class_mod || ''\n - config.class_array.elem_class = config.class_array.elem_class || ''\n - config.add_class = config.add_class || ''\n - config.placeholder = config.placeholder || ''\n if !config.id\n  - config.id = config.title.replace(/\\s/g, '_').replace(/[.,:;(){}/?!@#$%&*]/g, '')\n else\n  - config.id = config.id.replace(/\\s/g, '_').replace(/[.,:;(){}/?!@#$%&*]/g, '')\n if config.type === 'text' || config.type === 'password' || config.type === 'email' || config.type === 'tel' || config.type === 'textarea' || config.type === 'select' || config.type === 'file'\n  dl.form_cell(class=config.class_array.block_class_mod)\n   dt.form_cell_title(class=config.class_array.class_mod)\n    label(for=config.id) #{config.title}\n   dd.form_field_wrap(class=config.class_array.class_mod)\n    if config.type === 'text' || config.type === 'password' || config.type === 'email' || config.type === 'tel'\n     if config.value\n      input.form_field(value=config.value type=config.type id=config.id class='#{config.class_array.elem_class} #{config.add_class}' placeholder=config.placeholder)\n      block\n     else\n      input.form_field(type=config.type id=config.id class='#{config.class_array.elem_class} #{config.add_class}' placeholder=config.placeholder)\n      block\n    if config.type === 'textarea'\n     textarea.form_field(id=config.id class='#{config.class_array.elem_class} #{config.add_class}' placeholder=config.placeholder) #{config.value}\n     block\n    if config.type === 'file'\n     input.form_field(type=config.type id=config.id class='#{config.class_array.elem_class} #{config.add_class}' placeholder=config.placeholder)\n     .form_field_file_field\n      span.form_field_file_text #{config.title}\n      span.form_field_file_butt Choose File\n    if config.type === 'select'\n     select.form_field(id=config.id class='#{config.class_array.elem_class} #{config.add_class}' data-placeholder=config.placeholder)\n      each option in config.options\n       option(value=option)= option\n     block\n if config.type === 'checkbox' || config.type === 'radio'\n  label.radio_check(class=config.class_array.block_class_mod)\n   if config.checked\n    input.radio_check_input(name=config.name type=config.type class='#{config.class_array.elem_class} #{config.add_class}' checked='checked')\n   else\n    input.radio_check_input(name=config.name type=config.type class='#{config.class_array.elem_class} #{config.add_class}')\n   span.radio_check_text(class=config.class_array.class_mod) #{config.title}\n//- create radio button\n+form_element({\n type: 'radio',\n class_array: default_radio,\n title: 'Title of the radio',\n name: 'radio',\n checked: false\n})\n+form_element({\n type: 'radio',\n class_array: default_radio,\n title: 'Title of the radio with a very long text and you can paste here any text',\n name: 'radio',\n checked: true\n})","parentReference":"2","wrapper":"<sg-wrapper-content/>","renderMarkup":"\n<label class=\"radio_check radio_1_mod\">\n  <input name=\"radio\" type=\"radio\" class=\"radio_check_input radio_1_mod \"><span class=\"radio_check_text radio_1_mod\">Title of the radio</span>\n</label>\n<label class=\"radio_check radio_1_mod\">\n  <input name=\"radio\" type=\"radio\" checked=\"checked\" class=\"radio_check_input radio_1_mod \"><span class=\"radio_check_text radio_1_mod\">Title of the radio with a very long text and you can paste here any text</span>\n</label>","variables":["brand_default_color","brand_default_color"],"fileHash":"59e31a54b3ca396d2ccd5c4df4833b47"},{"header":"Select","description":"<p class=\"sg\">Select with custom styling. In jade we define arrays with classes for input, mixin(form_element) and then invoke it. You should create all styles for the form elements in <b>assets/sass/_forms.scss</b> file. We use <a href=\"https://harvesthq.github.io/chosen/\" target=\"_blank\" class=\"sg\">chosen</a> jQuery plugin for select styling.</p>\n","modifiers":[],"deprecated":false,"experimental":false,"reference":"2.5","markup":"\n<div class=\"test_container\">\n  <dl class=\"form_cell form_cell_v1_mod\">\n    <dt class=\"form_cell_title form_v1_mod\">\n      <label for=\"select\">some title</label>\n    </dt>\n    <dd class=\"form_field_wrap form_v1_mod\">\n      <select id=\"select\" data-placeholder=\"\" class=\"form_field default_mod \">\n        <option value=\"Option 1\">Option 1</option>\n        <option value=\"Option 2\">Option 2</option>\n        <option value=\"Option 3\">Option 3</option>\n      </select>\n    </dd>\n  </dl>\n</div>","css":".test_container {\r\n\tmin-height: 25rem;\r\n}","syntax":"scss","file":"_forms.scss","markupJade":"//- arrays for form elements\n- var default_field = {block_class_mod:'form_cell_v1_mod',class_mod:'form_v1_mod', elem_class:'default_mod'}\n- var default_field_hidden = {block_class_mod:'form_cell_v1_mod',class_mod:'form_v1_mod hline_hide_mod', elem_class:'default_mod'}\n//- mixin for form elements\nmixin form_element(config)\n //- default values\n - config.class_array = config.class_array || {}\n - config.class_array.block_class_mod = config.class_array.block_class_mod || ''\n - config.class_array.class_mod = config.class_array.class_mod || ''\n - config.class_array.elem_class = config.class_array.elem_class || ''\n - config.add_class = config.add_class || ''\n - config.placeholder = config.placeholder || ''\n if !config.id\n  - config.id = config.title.replace(/\\s/g, '_').replace(/[.,:;(){}/?!@#$%&*]/g, '')\n else\n  - config.id = config.id.replace(/\\s/g, '_').replace(/[.,:;(){}/?!@#$%&*]/g, '')\n if config.type === 'text' || config.type === 'password' || config.type === 'email' || config.type === 'tel' || config.type === 'textarea' || config.type === 'select' || config.type === 'file'\n  dl.form_cell(class=config.class_array.block_class_mod)\n   dt.form_cell_title(class=config.class_array.class_mod)\n    label(for=config.id) #{config.title}\n   dd.form_field_wrap(class=config.class_array.class_mod)\n    if config.type === 'text' || config.type === 'password' || config.type === 'email' || config.type === 'tel'\n     if config.value\n      input.form_field(value=config.value type=config.type id=config.id class='#{config.class_array.elem_class} #{config.add_class}' placeholder=config.placeholder)\n      block\n     else\n      input.form_field(type=config.type id=config.id class='#{config.class_array.elem_class} #{config.add_class}' placeholder=config.placeholder)\n      block\n    if config.type === 'textarea'\n     textarea.form_field(id=config.id class='#{config.class_array.elem_class} #{config.add_class}' placeholder=config.placeholder) #{config.value}\n     block\n    if config.type === 'file'\n     input.form_field(type=config.type id=config.id class='#{config.class_array.elem_class} #{config.add_class}' placeholder=config.placeholder)\n     .form_field_file_field\n      span.form_field_file_text #{config.title}\n      span.form_field_file_butt Choose File\n    if config.type === 'select'\n     select.form_field(id=config.id class='#{config.class_array.elem_class} #{config.add_class}' data-placeholder=config.placeholder)\n      each option in config.options\n       option(value=option)= option\n     block\n if config.type === 'checkbox' || config.type === 'radio'\n  label.radio_check(class=config.class_array.block_class_mod)\n   if config.checked\n    input.radio_check_input(name=config.name type=config.type class='#{config.class_array.elem_class} #{config.add_class}' checked='checked')\n   else\n    input.radio_check_input(name=config.name type=config.type class='#{config.class_array.elem_class} #{config.add_class}')\n   span.radio_check_text(class=config.class_array.class_mod) #{config.title}\n//- create select\n.test_container\n +form_element({\n \ttype: 'select',\n \tclass_array: default_field,\n \ttitle: 'some title',\n \tid: 'select',\n \toptions: ['Option 1', 'Option 2', 'Option 3']\n })","parentReference":"2","wrapper":"<sg-wrapper-content/>","renderMarkup":"\n<div class=\"test_container\">\n  <dl class=\"form_cell form_cell_v1_mod\">\n    <dt class=\"form_cell_title form_v1_mod\">\n      <label for=\"select\">some title</label>\n    </dt>\n    <dd class=\"form_field_wrap form_v1_mod\">\n      <select id=\"select\" data-placeholder=\"\" class=\"form_field default_mod \">\n        <option value=\"Option 1\">Option 1</option>\n        <option value=\"Option 2\">Option 2</option>\n        <option value=\"Option 3\">Option 3</option>\n      </select>\n    </dd>\n  </dl>\n</div>","variables":[],"fileHash":"59e31a54b3ca396d2ccd5c4df4833b47"},{"header":"Section title","description":"<p class=\"sg\">Titles can have different colors,sizes and alignment. It can be quietly difficult to create semantic classes such as &apos;big_mod&apos; or &apos;small_mod&apos;, so we decided to create version-model-classes.</p>\n","modifiers":[{"id":1,"name":".v1_mod","description":"First version of the title","className":"v1_mod","markup":"\n<h2 class=\"section_title {$modifiers}\">Title of the section</h2>","markupJade":"h2.section_title(class=\"{$modifiers}\") Title of the section","renderMarkup":"\n<h2 class=\"section_title {$modifiers}\">Title of the section</h2>"},{"id":2,"name":".v1_mod.gray_mod","description":"Color modifier","className":"v1_mod gray_mod","markup":"\n<h2 class=\"section_title {$modifiers}\">Title of the section</h2>","markupJade":"h2.section_title(class=\"{$modifiers}\") Title of the section","renderMarkup":"\n<h2 class=\"section_title {$modifiers}\">Title of the section</h2>"},{"id":3,"name":".v1_mod.center_mod","description":"Alignment modifier","className":"v1_mod center_mod","markup":"\n<h2 class=\"section_title {$modifiers}\">Title of the section</h2>","markupJade":"h2.section_title(class=\"{$modifiers}\") Title of the section","renderMarkup":"\n<h2 class=\"section_title {$modifiers}\">Title of the section</h2>"},{"id":4,"name":".v2_mod","description":"Second version of the title","className":"v2_mod","markup":"\n<h2 class=\"section_title {$modifiers}\">Title of the section</h2>","markupJade":"h2.section_title(class=\"{$modifiers}\") Title of the section","renderMarkup":"\n<h2 class=\"section_title {$modifiers}\">Title of the section</h2>"},{"id":5,"name":".v2_mod.bordered_up_mod","description":"Decor modifier(border in this case)","className":"v2_mod bordered_up_mod","markup":"\n<h2 class=\"section_title {$modifiers}\">Title of the section</h2>","markupJade":"h2.section_title(class=\"{$modifiers}\") Title of the section","renderMarkup":"\n<h2 class=\"section_title {$modifiers}\">Title of the section</h2>"},{"id":6,"name":".v2_mod.bordered_down_mod.gray_mod","description":"Another decor modifier(border in this case) + color modifier","className":"v2_mod bordered_down_mod gray_mod","markup":"\n<h2 class=\"section_title {$modifiers}\">Title of the section</h2>","markupJade":"h2.section_title(class=\"{$modifiers}\") Title of the section","renderMarkup":"\n<h2 class=\"section_title {$modifiers}\">Title of the section</h2>"},{"id":7,"name":".v2_mod.bordered_down_mod.inline_mod","description":"Another decor modifier(border in this case) + box-model modifier","className":"v2_mod bordered_down_mod inline_mod","markup":"\n<h2 class=\"section_title {$modifiers}\">Title of the section</h2>","markupJade":"h2.section_title(class=\"{$modifiers}\") Title of the section","renderMarkup":"\n<h2 class=\"section_title {$modifiers}\">Title of the section</h2>"}],"deprecated":false,"experimental":false,"reference":"3","markup":"\n<h2 class=\"section_title {$modifiers}\">Title of the section</h2>","css":".section_title {\r\n\t&.gray_mod {\r\n\t\tcolor:#aaa;\r\n\t}\r\n\r\n\t&.v1_mod {\r\n\t\tfont-size: 3rem;\r\n\t\ttext-transform: uppercase;\r\n\r\n\t\t&.center_mod {\r\n\t\t\ttext-align: center;\r\n\t\t}\r\n\t}\r\n\t&.v2_mod {\r\n\t\tfont-family:'Times New Roman',sans-serif;\r\n\t\tfont-size: 4rem;\r\n\t\tfont-weight: 400;\r\n\r\n\t\t&.bordered_up_mod {\r\n\t\t\tborder-top:1px solid currentColor;\r\n\t\t}\r\n\r\n\t\t&.bordered_down_mod {\r\n\t\t\tborder-bottom:1px solid currentColor;\r\n\t\t}\r\n\r\n\t\t&.inline_mod {\r\n\t\t\tdisplay: inline-block;\r\n\t\t}\r\n\t}\r\n}","syntax":"scss","file":"_titles.scss","markupJade":"h2.section_title(class=\"{$modifiers}\") Title of the section","wrapper":"<sg-wrapper-content/>","renderMarkup":"\n<h2 class=\"section_title {$modifiers}\">Title of the section</h2>","variables":[],"fileHash":"f6459127886408870348a36d127e11de"},{"header":"Dropdown","description":"<p class=\"sg\">We use additional classes for dropdowns. So you can just add these classes and styles to your existing elements and they becomes dropdowns. You can find marup, styles and scripts for dropdowns in <b>helpers/components/dropdowns</b> folder.</p>\n","modifiers":[{"id":1,"name":".down_left_mod","description":"Dropdown opened on down and left sides","className":"down_left_mod","markup":"\n<div class=\"test_container center_mod\">\n  <div class=\"dropdown_container dropdownContainer\"><a href=\"#\" class=\"dropdown_trigger dropdownTrigger\">Home</a>\n    <div class=\"dropdown_content {$modifiers}\">\n      <ul class=\"dropdown_list\">\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Lorem</a></li>\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Ipsum</a></li>\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Dolor</a></li>\n      </ul>\n    </div>\n  </div>\n</div>","markupJade":".test_container.center_mod\n .dropdown_container.dropdownContainer\n  a.dropdown_trigger.dropdownTrigger(href=\"#\") Home\n  .dropdown_content(class=\"{$modifiers}\")\n   ul.dropdown_list\n    li.dropdown_item\n     a.dropdown_link(href=\"#\") Lorem\n    li.dropdown_item\n     a.dropdown_link(href=\"#\") Ipsum\n    li.dropdown_item\n     a.dropdown_link(href=\"#\") Dolor","renderMarkup":"\n<div class=\"test_container center_mod\">\n  <div class=\"dropdown_container dropdownContainer\"><a href=\"#\" class=\"dropdown_trigger dropdownTrigger\">Home</a>\n    <div class=\"dropdown_content {$modifiers}\">\n      <ul class=\"dropdown_list\">\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Lorem</a></li>\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Ipsum</a></li>\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Dolor</a></li>\n      </ul>\n    </div>\n  </div>\n</div>"},{"id":2,"name":".down_right_mod","description":"Dropdown opened on down and right sides","className":"down_right_mod","markup":"\n<div class=\"test_container center_mod\">\n  <div class=\"dropdown_container dropdownContainer\"><a href=\"#\" class=\"dropdown_trigger dropdownTrigger\">Home</a>\n    <div class=\"dropdown_content {$modifiers}\">\n      <ul class=\"dropdown_list\">\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Lorem</a></li>\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Ipsum</a></li>\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Dolor</a></li>\n      </ul>\n    </div>\n  </div>\n</div>","markupJade":".test_container.center_mod\n .dropdown_container.dropdownContainer\n  a.dropdown_trigger.dropdownTrigger(href=\"#\") Home\n  .dropdown_content(class=\"{$modifiers}\")\n   ul.dropdown_list\n    li.dropdown_item\n     a.dropdown_link(href=\"#\") Lorem\n    li.dropdown_item\n     a.dropdown_link(href=\"#\") Ipsum\n    li.dropdown_item\n     a.dropdown_link(href=\"#\") Dolor","renderMarkup":"\n<div class=\"test_container center_mod\">\n  <div class=\"dropdown_container dropdownContainer\"><a href=\"#\" class=\"dropdown_trigger dropdownTrigger\">Home</a>\n    <div class=\"dropdown_content {$modifiers}\">\n      <ul class=\"dropdown_list\">\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Lorem</a></li>\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Ipsum</a></li>\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Dolor</a></li>\n      </ul>\n    </div>\n  </div>\n</div>"},{"id":3,"name":".up_left_mod","description":"Dropdown opened on up and left sides","className":"up_left_mod","markup":"\n<div class=\"test_container center_mod\">\n  <div class=\"dropdown_container dropdownContainer\"><a href=\"#\" class=\"dropdown_trigger dropdownTrigger\">Home</a>\n    <div class=\"dropdown_content {$modifiers}\">\n      <ul class=\"dropdown_list\">\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Lorem</a></li>\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Ipsum</a></li>\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Dolor</a></li>\n      </ul>\n    </div>\n  </div>\n</div>","markupJade":".test_container.center_mod\n .dropdown_container.dropdownContainer\n  a.dropdown_trigger.dropdownTrigger(href=\"#\") Home\n  .dropdown_content(class=\"{$modifiers}\")\n   ul.dropdown_list\n    li.dropdown_item\n     a.dropdown_link(href=\"#\") Lorem\n    li.dropdown_item\n     a.dropdown_link(href=\"#\") Ipsum\n    li.dropdown_item\n     a.dropdown_link(href=\"#\") Dolor","renderMarkup":"\n<div class=\"test_container center_mod\">\n  <div class=\"dropdown_container dropdownContainer\"><a href=\"#\" class=\"dropdown_trigger dropdownTrigger\">Home</a>\n    <div class=\"dropdown_content {$modifiers}\">\n      <ul class=\"dropdown_list\">\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Lorem</a></li>\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Ipsum</a></li>\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Dolor</a></li>\n      </ul>\n    </div>\n  </div>\n</div>"},{"id":4,"name":".up_right_mod","description":"Dropdown opened on up and right sides","className":"up_right_mod","markup":"\n<div class=\"test_container center_mod\">\n  <div class=\"dropdown_container dropdownContainer\"><a href=\"#\" class=\"dropdown_trigger dropdownTrigger\">Home</a>\n    <div class=\"dropdown_content {$modifiers}\">\n      <ul class=\"dropdown_list\">\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Lorem</a></li>\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Ipsum</a></li>\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Dolor</a></li>\n      </ul>\n    </div>\n  </div>\n</div>","markupJade":".test_container.center_mod\n .dropdown_container.dropdownContainer\n  a.dropdown_trigger.dropdownTrigger(href=\"#\") Home\n  .dropdown_content(class=\"{$modifiers}\")\n   ul.dropdown_list\n    li.dropdown_item\n     a.dropdown_link(href=\"#\") Lorem\n    li.dropdown_item\n     a.dropdown_link(href=\"#\") Ipsum\n    li.dropdown_item\n     a.dropdown_link(href=\"#\") Dolor","renderMarkup":"\n<div class=\"test_container center_mod\">\n  <div class=\"dropdown_container dropdownContainer\"><a href=\"#\" class=\"dropdown_trigger dropdownTrigger\">Home</a>\n    <div class=\"dropdown_content {$modifiers}\">\n      <ul class=\"dropdown_list\">\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Lorem</a></li>\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Ipsum</a></li>\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Dolor</a></li>\n      </ul>\n    </div>\n  </div>\n</div>"}],"deprecated":false,"experimental":false,"reference":"4","markup":"\n<div class=\"test_container center_mod\">\n  <div class=\"dropdown_container dropdownContainer\"><a href=\"#\" class=\"dropdown_trigger dropdownTrigger\">Home</a>\n    <div class=\"dropdown_content {$modifiers}\">\n      <ul class=\"dropdown_list\">\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Lorem</a></li>\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Ipsum</a></li>\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Dolor</a></li>\n      </ul>\n    </div>\n  </div>\n</div>","css":"// variables\r\n$white:#fff;\r\n$brand_default_color: #3498db;\r\n\r\n// mixins\r\n@mixin triangle_narrow($side,$color,$size) {\r\n\t$narrow_size: $size/2;\r\n\t@if $side == left {\r\n\t\tborder:$narrow_size solid transparent;\r\n\t\tborder-right:$size solid $color;\r\n\t}\r\n\t@if $side == right {\r\n\t\tborder:$narrow_size solid transparent;\r\n\t\tborder-left:$size solid $color;\r\n\t}\r\n\t@if $side == top {\r\n\t\tborder:$narrow_size solid transparent;\r\n\t\tborder-bottom:$size solid $color;\r\n\t}\r\n\t@if $side == bottom {\r\n\t\tborder:$narrow_size solid transparent;\r\n\t\tborder-top:$size solid $color;\r\n\t}\r\n}\r\n\r\n.dropdown_container {\r\n\tposition: relative;\r\n\tdisplay: inline-block;\r\n}\r\n\r\n.dropdown_trigger {\r\n\tposition: relative;\r\n\tdisplay: inline-block;\r\n\tpadding:0 3rem 0 1rem;\r\n\theight: 4rem;\r\n\tline-height: 4rem;\r\n\tcolor:$white;\r\n\tborder-radius:1rem;\r\n\tbackground: $brand_default_color;\r\n\r\n\t&:hover, &:focus {\r\n\t\ttext-decoration: none;\r\n\t}\r\n\r\n\t&:before {\r\n\t\tcontent: '';\r\n\t\tposition: absolute;\r\n\t\tright: 1rem;\r\n\t\ttop: 50%;\r\n\t\tmargin-top:-.4rem;\r\n\r\n\t\t@include triangle_narrow(bottom,$white,.8rem);\r\n\r\n\t\t.dropdown_container.opened_mod & {\r\n\t\t\tmargin-top:-.8rem;\r\n\r\n\t\t\t@include triangle_narrow(top,$white,.8rem);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n.dropdown_content {\r\n\tposition: absolute;\r\n\tz-index: 10;\r\n\tmin-width: 20rem;\r\n\tbackground: $white;\r\n\tborder: 1px solid $brand_default_color;\r\n\tborder-radius: .3rem;\r\n\toverflow: hidden;\r\n\topacity: 0;\r\n\tpointer-events: none;\r\n\ttransition:.3s ease;\r\n\r\n\t&.down_left_mod {\r\n\t\tleft: 0;\r\n\t\ttop: calc(100% + .5rem);\r\n\t\ttransform:translate(0,-1rem);\r\n\t}\r\n\r\n\t&.down_right_mod {\r\n\t\tright: 0;\r\n\t\ttop: calc(100% + .5rem);\r\n\t\ttransform:translate(0,-1rem);\r\n\t}\r\n\r\n\t&.up_left_mod {\r\n\t\tleft: 0;\r\n\t\tbottom: calc(100% + .5rem);\r\n\t\ttransform:translate(0,-1rem);\r\n\t}\r\n\r\n\t&.up_right_mod {\r\n\t\tright: 0;\r\n\t\tbottom: calc(100% + .5rem);\r\n\t\ttransform:translate(0,-1rem);\r\n\t}\r\n\r\n\t.dropdown_container.opened_mod & {\r\n\t\ttransform:translate(0,0);\r\n\t\topacity: 1;\r\n\t\tpointer-events: auto;\r\n\t}\r\n}\r\n\r\n.dropdown_link {\r\n\tdisplay: block;\r\n\tpadding:.5rem 2rem;\r\n\tcolor:$brand_default_color;\r\n\ttransition:.3s;\r\n\r\n\t&:hover {\r\n\t\tbackground: $brand_default_color;\r\n\t\tcolor:$white;\r\n\t}\r\n\r\n\t&:hover, &:focus {\r\n\t\ttext-decoration: none;\r\n\t}\r\n}\r\n\r\n.test_container {\r\n\t&.center_mod {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: center;\r\n\t\talign-items:center;\r\n\t}\r\n}","syntax":"scss","file":"_dropdowns.scss","markupJade":".test_container.center_mod\n .dropdown_container.dropdownContainer\n  a.dropdown_trigger.dropdownTrigger(href=\"#\") Home\n  .dropdown_content(class=\"{$modifiers}\")\n   ul.dropdown_list\n    li.dropdown_item\n     a.dropdown_link(href=\"#\") Lorem\n    li.dropdown_item\n     a.dropdown_link(href=\"#\") Ipsum\n    li.dropdown_item\n     a.dropdown_link(href=\"#\") Dolor","wrapper":"<sg-wrapper-content/>","renderMarkup":"\n<div class=\"test_container center_mod\">\n  <div class=\"dropdown_container dropdownContainer\"><a href=\"#\" class=\"dropdown_trigger dropdownTrigger\">Home</a>\n    <div class=\"dropdown_content {$modifiers}\">\n      <ul class=\"dropdown_list\">\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Lorem</a></li>\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Ipsum</a></li>\n        <li class=\"dropdown_item\"><a href=\"#\" class=\"dropdown_link\">Dolor</a></li>\n      </ul>\n    </div>\n  </div>\n</div>","variables":["side","color","size","side","narrow_size","size","color","side","narrow_size","size","color","side","narrow_size","size","color","side","narrow_size","size","color","white","brand_default_color","white","white","white","brand_default_color","brand_default_color","brand_default_color","white"],"fileHash":"0301e14dcc9099ed9a9d2f5c03339664"},{"header":"Pagination","description":"<p class=\"sg\">We use jade mixin for generating pagination. You can find markup and styles for pagination in <b>helpers/components/pagination</b> folder.</p>\n","modifiers":[],"deprecated":false,"experimental":false,"reference":"5","markup":"\n<div class=\"pag_block\">\n  <ul class=\"pag_list\">\n    <li class=\"pag_item prev_mod\"><a href=\"#\" class=\"pag_link prev_mod\"></a></li>\n    <li class=\"pag_item\"><a title=\"1\" class=\"pag_link active_mod\">1</a></li>\n    <li class=\"pag_item\"><a href=\"#\" title=\"2\" class=\"pag_link\">2</a></li>\n    <li class=\"pag_item\"><a href=\"#\" title=\"3\" class=\"pag_link\">3</a></li>\n    <li class=\"pag_item\"><a class=\"pag_link dots_mod\">&hellip;</a></li>\n    <li class=\"pag_item\"><a href=\"#\" title=\"4\" class=\"pag_link\">4</a></li>\n    <li class=\"pag_item\"><a href=\"#\" title=\"5\" class=\"pag_link\">5</a></li>\n    <li class=\"pag_item next_mod\"><a href=\"#\" class=\"pag_link next_mod\"></a></li>\n  </ul>\n</div>","css":"// variables\r\n$white:#fff;\r\n$black:#000;\r\n$brand_default_color: #3498db;\r\n\r\n// mixins\r\n@mixin arrow($direction,$color:#000,$width:1rem,$arrow_width:.1rem) {\r\n\twidth:$width;\r\n\theight:$width;\r\n\ttransform:rotate(45deg);\r\n\r\n\t@if $direction == right {\r\n\t\tborder-top:$arrow_width solid $color;\r\n\t\tborder-right:$arrow_width solid $color;\r\n\t\tborder-bottom:0;\r\n\t\tborder-left: 0;\r\n\t}\r\n\t@if $direction == bottom {\r\n\t\tborder-right:$arrow_width solid $color;\r\n\t\tborder-bottom:$arrow_width solid $color;\r\n\t\tborder-top: 0;\r\n\t\tborder-left: 0;\r\n\t}\r\n\t@if $direction == left {\r\n\t\tborder-bottom:$arrow_width solid $color;\r\n\t\tborder-left:$arrow_width solid $color;\r\n\t\tborder-top: 0;\r\n\t\tborder-right: 0;\r\n\t}\r\n\t@if $direction == top {\r\n\t\tborder-left:$arrow_width solid $color;\r\n\t\tborder-top:$arrow_width solid $color;\r\n\t\tborder-bottom: 0;\r\n\t\tborder-right: 0;\r\n\t}\r\n}\r\n\r\n\r\n.pag_block {\r\n\tmargin:2rem;\r\n}\r\n\r\n.pag_list {\r\n\tdisplay: flex;\r\n}\r\n\r\n.pag_item {\r\n\tpadding:0 0 0 .5rem;\r\n\r\n\t&:first-child {\r\n\t\tpadding: 0;\r\n\t}\r\n\r\n\t&.next_mod {\r\n\t\tposition: relative;\r\n\t}\r\n}\r\n\r\n.pag_link {\r\n\tdisplay: block;\r\n\theight: 2.8rem;\r\n\tline-height: 2.8rem;\r\n\tpadding:0 1rem;\r\n\tcolor:$brand_default_color;\r\n\tborder:1px solid $brand_default_color;\r\n\tborder-radius: 2px;\r\n\r\n\t&.active_mod,&:hover {\r\n\t\tcolor:$white;\r\n\t\tbackground: $brand_default_color;\r\n\t}\r\n\r\n\t&:hover, &:focus {\r\n\t\ttext-decoration: none;\r\n\t}\r\n\r\n\t&.dots_mod {\r\n\t\tborder:1px solid transparent;\r\n\r\n\t\t&:hover {\r\n\t\t\tcolor: $black;\r\n\t\t\tbackground: $white;\r\n\t\t}\r\n\t}\r\n\r\n\t&.prev_mod,&.next_mod {\r\n\t\tposition: relative;\r\n\r\n\t\t&:before {\r\n\t\t\tcontent: '';\r\n\t\t\tposition: absolute;\r\n\t\t\ttop: 50%;\r\n\t\t\tmargin:(-.5rem) 0 0 0;\r\n\t\t\tdisplay: block;\r\n\t\t}\r\n\t}\r\n\r\n\t&.prev_mod {\r\n\t\t&:before {\r\n\t\t\tleft: .7rem;\r\n\r\n\t\t\t@include arrow(left,$brand_default_color,1rem,.2rem);\r\n\t\t}\r\n\t\t&:hover:before {\r\n\t\t\t@include arrow(left,$white,1rem,.2rem);\r\n\t\t}\r\n\t}\r\n\r\n\t&.next_mod {\r\n\t\t&:before {\r\n\t\t\tright: .7rem;\r\n\r\n\t\t\t@include arrow(right,$brand_default_color,1rem,.2rem);\r\n\t\t}\r\n\t\t&:hover:before {\r\n\t\t\t@include arrow(right,$white,1rem,.2rem);\r\n\t\t}\r\n\t}\r\n}","syntax":"scss","file":"_pagination.scss","markupJade":"mixin pagination(config)\n - config.mod = config.mod || ''\n - config.active = config.active || 1\n .pag_block(class='#{config.mod}')\n  ul.pag_list(class=\"#{config.mod}\")\n   if config.arrows\n    li.pag_item.prev_mod(class=\"#{config.mod}\")\n     a.pag_link.prev_mod(href=\"#\" class=\"#{config.mod}\")\n   - var i = 1;\n   while i <= config.pages\n    if i == config.pages - 1\n     li.pag_item(class=\"#{config.mod}\")\n      a.pag_link.dots_mod(class=\"#{config.mod}\") &hellip;\n     li.pag_item(class=\"#{config.mod}\")\n      a.pag_link(href=\"#\" title=\"#{i}\" class=\"#{config.mod}\") #{i}\n    else if i == config.active\n     li.pag_item(class=\"#{config.mod}\")\n      a.pag_link.active_mod(title=\"#{i}\" class=\"#{config.mod}\") #{i}\n    else\n     li.pag_item(class=\"#{config.mod}\")\n      a.pag_link(href=\"#\" title=\"#{i}\" class=\"#{config.mod}\") #{i}\n    -i++\n   if config.arrows\n    li.pag_item.next_mod\n     a.pag_link.next_mod(href=\"#\" class=\"#{config.mod}\")\n+pagination({\n\tpages:5,\n\tarrows:true\n})","wrapper":"<sg-wrapper-content/>","renderMarkup":"\n<div class=\"pag_block\">\n  <ul class=\"pag_list\">\n    <li class=\"pag_item prev_mod\"><a href=\"#\" class=\"pag_link prev_mod\"></a></li>\n    <li class=\"pag_item\"><a title=\"1\" class=\"pag_link active_mod\">1</a></li>\n    <li class=\"pag_item\"><a href=\"#\" title=\"2\" class=\"pag_link\">2</a></li>\n    <li class=\"pag_item\"><a href=\"#\" title=\"3\" class=\"pag_link\">3</a></li>\n    <li class=\"pag_item\"><a class=\"pag_link dots_mod\">&hellip;</a></li>\n    <li class=\"pag_item\"><a href=\"#\" title=\"4\" class=\"pag_link\">4</a></li>\n    <li class=\"pag_item\"><a href=\"#\" title=\"5\" class=\"pag_link\">5</a></li>\n    <li class=\"pag_item next_mod\"><a href=\"#\" class=\"pag_link next_mod\"></a></li>\n  </ul>\n</div>","variables":["direction","width","width","direction","arrow_width","color","arrow_width","color","direction","arrow_width","color","arrow_width","color","direction","arrow_width","color","arrow_width","color","direction","arrow_width","color","arrow_width","color","brand_default_color","brand_default_color","white","brand_default_color","black","white","brand_default_color","white","brand_default_color","white"],"fileHash":"3c4970cba7434233aee9c4450bf3f774"},{"header":"Breadcrumbs","description":"<p class=\"sg\">We use jade mixin for generating breadcrumbs. You can find markup and styles for pagination in <b>helpers/components/breadcrumbs</b> folder.</p>\n","modifiers":[],"deprecated":false,"experimental":false,"reference":"6","markup":"\n<ul class=\"breadcrumbs_list\">\n  <li class=\"breadcrumbs_item\"><a href=\"#\" class=\"breadcrumbs_link\">Home</a>\n  </li>\n  <li class=\"breadcrumbs_item\"><a href=\"#\" class=\"breadcrumbs_link\">Categories</a>\n  </li>\n  <li class=\"breadcrumbs_item\"><a class=\"breadcrumbs_link current_mod\">Current</a>\n  </li>\n</ul>","css":"// variables\r\n$white:#fff;\r\n$black:#000;\r\n$color_text_base:$black;\r\n\r\n.breadcrumbs_list {\r\n\tdisplay:flex;\r\n\tmargin:50px;\r\n}\r\n\r\n.breadcrumbs_item {\r\n\tpadding:0 0 0 1rem;\r\n\r\n\t&:before {\r\n\t\tcontent: '>';\r\n\t\tdisplay: inline-block;\r\n\t\tmargin:0 1rem 0 0;\r\n\t}\r\n\r\n\t&:first-child {\r\n\t\tpadding: 0;\r\n\r\n\t\t&:before {\r\n\t\t\tdisplay: none;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n.breadcrumbs_link {\r\n\tcolor:$brand_default_color;\r\n\r\n\t&.current_mod {\r\n\t\tcolor:$color_text_base;\r\n\r\n\t\t&:hover, &:focus {\r\n\t\t\ttext-decoration: none;\r\n\t\t}\r\n\t}\r\n}","syntax":"scss","file":"_breadcrumbs.scss","markupJade":"mixin breadcrumbs(array,add_class)\n  - add_class = add_class || ''\n  ul.breadcrumbs_list(class=add_class)\n    each crumb, index in array\n      li.breadcrumbs_item\n        if (index == array.length - 1)\n          a.breadcrumbs_link.current_mod=crumb\n        else\n          a.breadcrumbs_link(href=\"#\")=crumb\n+breadcrumbs(['Home','Categories','Current'])","wrapper":"<sg-wrapper-content/>","renderMarkup":"\n<ul class=\"breadcrumbs_list\">\n  <li class=\"breadcrumbs_item\"><a href=\"#\" class=\"breadcrumbs_link\">Home</a>\n  </li>\n  <li class=\"breadcrumbs_item\"><a href=\"#\" class=\"breadcrumbs_link\">Categories</a>\n  </li>\n  <li class=\"breadcrumbs_item\"><a class=\"breadcrumbs_link current_mod\">Current</a>\n  </li>\n</ul>","variables":["brand_default_color","color_text_base"],"fileHash":"8dc1d597a8bc0699b79621a7f6c89144"}],"config":{"appRoot":"","extraHead":"<style>html {font-size:10px} body {font-size:16px}</style>\n<script src=\"https://code.jquery.com/jquery-1.12.4.js\"></script>\n<script src=\"/dev_scripts/all.js\"></script>\n<script src=\"/dev_scripts/main.js\"></script>","commonClass":"","title":"Glivera team framework","disableEncapsulation":false,"disableHtml5Mode":true,"readOnly":false,"sideNav":false}}