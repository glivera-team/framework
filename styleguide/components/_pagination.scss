// Pagination
//
// We use jade mixin for generating pagination. You can find markup and styles for pagination in <b>helpers/components/pagination</b> folder.
//
// markup:
// mixin pagination(config)
//  - config.mod = config.mod || ''
//  - config.active = config.active || 1
//  .pag_block(class='#{config.mod}')
//   ul.pag_list(class="#{config.mod}")
//    if config.arrows
//     li.pag_item.prev_mod(class="#{config.mod}")
//      a.pag_link.prev_mod(href="#" class="#{config.mod}")
//    - var i = 1;
//    while i <= config.pages
//     if i == config.pages - 1
//      li.pag_item(class="#{config.mod}")
//       a.pag_link.dots_mod(class="#{config.mod}") &hellip;
//      li.pag_item(class="#{config.mod}")
//       a.pag_link(href="#" title="#{i}" class="#{config.mod}") #{i}
//     else if i == config.active
//      li.pag_item(class="#{config.mod}")
//       a.pag_link.active_mod(title="#{i}" class="#{config.mod}") #{i}
//     else
//      li.pag_item(class="#{config.mod}")
//       a.pag_link(href="#" title="#{i}" class="#{config.mod}") #{i}
//     -i++
//    if config.arrows
//     li.pag_item.next_mod
//      a.pag_link.next_mod(href="#" class="#{config.mod}")
// +pagination({
// 	pages:5,
// 	arrows:true
// })
//
// Styleguide 5

// variables
$white:#fff;
$black:#000;
$brand_default_color: #3498db;

// mixins
@mixin arrow($direction,$color:#000,$width:1rem,$arrow_width:.1rem) {
	width:$width;
	height:$width;
	transform:rotate(45deg);

	@if $direction == right {
		border-top:$arrow_width solid $color;
		border-right:$arrow_width solid $color;
		border-bottom:0;
		border-left: 0;
	}
	@if $direction == bottom {
		border-right:$arrow_width solid $color;
		border-bottom:$arrow_width solid $color;
		border-top: 0;
		border-left: 0;
	}
	@if $direction == left {
		border-bottom:$arrow_width solid $color;
		border-left:$arrow_width solid $color;
		border-top: 0;
		border-right: 0;
	}
	@if $direction == top {
		border-left:$arrow_width solid $color;
		border-top:$arrow_width solid $color;
		border-bottom: 0;
		border-right: 0;
	}
}


.pag_block {
	margin:2rem;
}

.pag_list {
	display: flex;
}

.pag_item {
	padding:0 0 0 .5rem;

	&:first-child {
		padding: 0;
	}

	&.next_mod {
		position: relative;
	}
}

.pag_link {
	display: block;
	height: 2.8rem;
	line-height: 2.8rem;
	padding:0 1rem;
	color:$brand_default_color;
	border:1px solid $brand_default_color;
	border-radius: 2px;

	&.active_mod,&:hover {
		color:$white;
		background: $brand_default_color;
	}

	&:hover, &:focus {
		text-decoration: none;
	}

	&.dots_mod {
		border:1px solid transparent;

		&:hover {
			color: $black;
			background: $white;
		}
	}

	&.prev_mod,&.next_mod {
		position: relative;

		&:before {
			content: '';
			position: absolute;
			top: 50%;
			margin:(-.5rem) 0 0 0;
			display: block;
		}
	}

	&.prev_mod {
		&:before {
			left: .7rem;

			@include arrow(left,$brand_default_color,1rem,.2rem);
		}
		&:hover:before {
			@include arrow(left,$white,1rem,.2rem);
		}
	}

	&.next_mod {
		&:before {
			right: .7rem;

			@include arrow(right,$brand_default_color,1rem,.2rem);
		}
		&:hover:before {
			@include arrow(right,$white,1rem,.2rem);
		}
	}
}